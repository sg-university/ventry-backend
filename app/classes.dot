digraph "classes" {
rankdir=BT
charset="utf-8"
"app.inners.models.entities.account.Account" [color="black", fontcolor="black", label=<{Account|created_at : datetime<br ALIGN="LEFT"/>email : str<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>location_id : UUID<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>password : str<br ALIGN="LEFT"/>role_id : UUID<br ALIGN="LEFT"/>updated_at : datetime<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.outers.interfaces.deliveries.controllers.account_controller.AccountController" [color="black", fontcolor="black", label=<{AccountController|account_management<br ALIGN="LEFT"/>|create_one(body: CreateBody): Content[Account]<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): Content[Account]<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, body: PatchBody): Content[Account]<br ALIGN="LEFT"/>read_all(request: Request): Content[List[Account]]<br ALIGN="LEFT"/>read_one_by_id(id: UUID): Content[Account]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.use_cases.managements.account_management.AccountManagement" [color="black", fontcolor="black", label=<{AccountManagement|account_repository<br ALIGN="LEFT"/>management_utility<br ALIGN="LEFT"/>|create_one(request: CreateOneRequest): Content[Account]<br ALIGN="LEFT"/>delete_one_by_id(request: DeleteOneByIdRequest): Content[Account]<br ALIGN="LEFT"/>patch_one_by_id(request: PatchOneByIdRequest): Content[Account]<br ALIGN="LEFT"/>read_all(request: ReadAllRequest): Content[List[Account]]<br ALIGN="LEFT"/>read_all_by_company_id(request: ReadAllByCompanyIdRequest): Content[List[Account]]<br ALIGN="LEFT"/>read_one_by_email(email: str): Content[Account]<br ALIGN="LEFT"/>read_one_by_email_and_password(email: str, password: str): Content[Account]<br ALIGN="LEFT"/>read_one_by_id(request: ReadOneByIdRequest): Content[Account]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.authentications.registers.account_register.AccountRegister" [color="black", fontcolor="black", label=<{AccountRegister|email : str<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>password : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.outers.repositories.account_repository.AccountRepository" [color="black", fontcolor="black", label=<{AccountRepository|datastore_utility<br ALIGN="LEFT"/>|create_one(entity: Account): Account<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): Account<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, entity: Account): Account<br ALIGN="LEFT"/>read_all(): List[Account]<br ALIGN="LEFT"/>read_all_by_company_id(company_id: UUID): List[Account]<br ALIGN="LEFT"/>read_one_by_email(email: str): Account<br ALIGN="LEFT"/>read_one_by_email_and_password(email: str, password: str): Account<br ALIGN="LEFT"/>read_one_by_id(id: UUID): Account<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.outers.interfaces.deliveries.controllers.authentication_controller.AuthenticationController" [color="black", fontcolor="black", label=<{AuthenticationController|login_authentication<br ALIGN="LEFT"/>register_authentication<br ALIGN="LEFT"/>|login(body: LoginByEmailAndPasswordBody): Content[LoginResponse]<br ALIGN="LEFT"/>register(body: RegisterByEmailAndPasswordBody): Content[RegisterResponse]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.models.entities.base_entity.BaseEntity" [color="black", fontcolor="black", label=<{BaseEntity|<br ALIGN="LEFT"/>|patch_from(entity: dict)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.models.value_objects.base_value_object.BaseValueObject" [color="black", fontcolor="black", label=<{BaseValueObject|<br ALIGN="LEFT"/>|patch_from(entity: dict)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.checkout_body.CheckoutBody" [color="black", fontcolor="black", label=<{CheckoutBody|is_record_to_inventory_controls : bool<br ALIGN="LEFT"/>transaction<br ALIGN="LEFT"/>transaction_item_maps : List[CheckoutTransactionItemMapBody]<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.checkout_request.CheckoutRequest" [color="black", fontcolor="black", label=<{CheckoutRequest|body<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.responses.managements.transactions.checkout_response.CheckoutResponse" [color="black", fontcolor="black", label=<{CheckoutResponse|inventory_controls : List[InventoryControl]<br ALIGN="LEFT"/>items : List[Item]<br ALIGN="LEFT"/>transaction<br ALIGN="LEFT"/>transaction_item_maps : List[TransactionItemMap]<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.checkout_transaction_body.CheckoutTransactionBody" [color="black", fontcolor="black", label=<{CheckoutTransactionBody|account_id : UUID<br ALIGN="LEFT"/>sell_price : float<br ALIGN="LEFT"/>timestamp : datetime<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.checkout_transaction_item_map_body.CheckoutTransactionItemMapBody" [color="black", fontcolor="black", label=<{CheckoutTransactionItemMapBody|item_id : UUID<br ALIGN="LEFT"/>quantity : float<br ALIGN="LEFT"/>sell_price : float<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.entities.company.Company" [color="black", fontcolor="black", label=<{Company|address : str<br ALIGN="LEFT"/>created_at : datetime<br ALIGN="LEFT"/>description : str<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>updated_at : datetime<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.outers.interfaces.deliveries.controllers.company_controller.CompanyController" [color="black", fontcolor="black", label=<{CompanyController|company_management<br ALIGN="LEFT"/>|create_one(body: CreateBody): Content[Company]<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): Content[Company]<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, body: PatchBody): Content[Company]<br ALIGN="LEFT"/>read_all(request: Request): Content[List[Company]]<br ALIGN="LEFT"/>read_one_by_id(id: UUID): Content[Company]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.use_cases.managements.company_management.CompanyManagement" [color="black", fontcolor="black", label=<{CompanyManagement|company_repository<br ALIGN="LEFT"/>management_utility<br ALIGN="LEFT"/>|create_one(request: CreateOneRequest): Content[Company]<br ALIGN="LEFT"/>delete_one_by_id(request: DeleteOneByIdRequest): Content[Company]<br ALIGN="LEFT"/>patch_one_by_id(request: PatchOneByIdRequest): Content[Company]<br ALIGN="LEFT"/>read_all(request: ReadAllRequest): Content[List[Company]]<br ALIGN="LEFT"/>read_one_by_id(request: ReadOneByIdRequest): Content[Company]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.authentications.registers.company_register.CompanyRegister" [color="black", fontcolor="black", label=<{CompanyRegister|address : str<br ALIGN="LEFT"/>description : str<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.outers.repositories.company_repository.CompanyRepository" [color="black", fontcolor="black", label=<{CompanyRepository|datastore_utility<br ALIGN="LEFT"/>|create_one(entity: Company): Company<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): Company<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, entity: Company): Company<br ALIGN="LEFT"/>read_all(): List[Company]<br ALIGN="LEFT"/>read_all_by_account_id(account_id: UUID): List[Company]<br ALIGN="LEFT"/>read_one_by_id(id: UUID): Company<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.outers.settings.datastore_settings.DatastoreSetting.Config" [color="black", fontcolor="black", label=<{Config|env_file : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.responses.content.Content" [color="black", fontcolor="black", label=<{Content|data : Optional[T]<br ALIGN="LEFT"/>message : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.accounts.create_body.CreateBody" [color="black", fontcolor="black", label=<{CreateBody|email : str<br ALIGN="LEFT"/>location_id : UUID<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>password : str<br ALIGN="LEFT"/>role_id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.companies.create_body.CreateBody" [color="black", fontcolor="black", label=<{CreateBody|address : str<br ALIGN="LEFT"/>description : str<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.files.create_body.CreateBody" [color="black", fontcolor="black", label=<{CreateBody|content : bytes<br ALIGN="LEFT"/>description : str<br ALIGN="LEFT"/>extension : str<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.inventory_controls.create_body.CreateBody" [color="black", fontcolor="black", label=<{CreateBody|account_id : UUID<br ALIGN="LEFT"/>item_id : UUID<br ALIGN="LEFT"/>quantity_after : float<br ALIGN="LEFT"/>quantity_before : float<br ALIGN="LEFT"/>timestamp : datetime<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.items.create_body.CreateBody" [color="black", fontcolor="black", label=<{CreateBody|code : str<br ALIGN="LEFT"/>description : str<br ALIGN="LEFT"/>location_id : UUID<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>quantity : float<br ALIGN="LEFT"/>type : str<br ALIGN="LEFT"/>unit_cost_price : float<br ALIGN="LEFT"/>unit_name : str<br ALIGN="LEFT"/>unit_sell_price : float<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.create_body.CreateBody" [color="black", fontcolor="black", label=<{CreateBody|quantity : float<br ALIGN="LEFT"/>sub_item_id : UUID<br ALIGN="LEFT"/>super_item_id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.item_file_maps.create_body.CreateBody" [color="black", fontcolor="black", label=<{CreateBody|file_id : UUID<br ALIGN="LEFT"/>item_id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.locations.create_body.CreateBody" [color="black", fontcolor="black", label=<{CreateBody|address : str<br ALIGN="LEFT"/>company_id : UUID<br ALIGN="LEFT"/>description : str<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.roles.create_body.CreateBody" [color="black", fontcolor="black", label=<{CreateBody|description : str<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.create_body.CreateBody" [color="black", fontcolor="black", label=<{CreateBody|account_id : UUID<br ALIGN="LEFT"/>sell_price : float<br ALIGN="LEFT"/>timestamp : datetime<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.create_body.CreateBody" [color="black", fontcolor="black", label=<{CreateBody|item_id : UUID<br ALIGN="LEFT"/>quantity : float<br ALIGN="LEFT"/>sell_price : float<br ALIGN="LEFT"/>transaction_id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.accounts.create_one_request.CreateOneRequest" [color="black", fontcolor="black", label=<{CreateOneRequest|body<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.companies.create_one_request.CreateOneRequest" [color="black", fontcolor="black", label=<{CreateOneRequest|body<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.files.create_one_request.CreateOneRequest" [color="black", fontcolor="black", label=<{CreateOneRequest|body<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.inventory_controls.create_one_request.CreateOneRequest" [color="black", fontcolor="black", label=<{CreateOneRequest|body<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.items.create_one_request.CreateOneRequest" [color="black", fontcolor="black", label=<{CreateOneRequest|body<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.create_one_request.CreateOneRequest" [color="black", fontcolor="black", label=<{CreateOneRequest|body<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.item_file_maps.create_one_request.CreateOneRequest" [color="black", fontcolor="black", label=<{CreateOneRequest|body<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.locations.create_one_request.CreateOneRequest" [color="black", fontcolor="black", label=<{CreateOneRequest|body<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.roles.create_one_request.CreateOneRequest" [color="black", fontcolor="black", label=<{CreateOneRequest|body<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.create_one_request.CreateOneRequest" [color="black", fontcolor="black", label=<{CreateOneRequest|body<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.create_one_request.CreateOneRequest" [color="black", fontcolor="black", label=<{CreateOneRequest|body<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.outers.utilities.datastore_utility.DataStoreUtility" [color="black", fontcolor="black", label=<{DataStoreUtility|engine : AsyncEngine<br ALIGN="LEFT"/>|create_session(): AsyncSession<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.outers.settings.datastore_settings.DatastoreSetting" [color="black", fontcolor="black", label=<{DatastoreSetting|DS_DATABASE : str<br ALIGN="LEFT"/>DS_DIALECT : str<br ALIGN="LEFT"/>DS_HOST : str<br ALIGN="LEFT"/>DS_PASSWORD : str<br ALIGN="LEFT"/>DS_PORT : str<br ALIGN="LEFT"/>DS_USER : str<br ALIGN="LEFT"/>URL<br ALIGN="LEFT"/>URL : Optional[str]<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.accounts.delete_one_by_id_request.DeleteOneByIdRequest" [color="black", fontcolor="black", label=<{DeleteOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.companies.delete_one_by_id_request.DeleteOneByIdRequest" [color="black", fontcolor="black", label=<{DeleteOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.files.delete_one_by_id_request.DeleteOneByIdRequest" [color="black", fontcolor="black", label=<{DeleteOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.inventory_controls.delete_one_by_id_request.DeleteOneByIdRequest" [color="black", fontcolor="black", label=<{DeleteOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.items.delete_one_by_id_request.DeleteOneByIdRequest" [color="black", fontcolor="black", label=<{DeleteOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.delete_one_by_id_request.DeleteOneByIdRequest" [color="black", fontcolor="black", label=<{DeleteOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.item_file_maps.delete_one_by_id_request.DeleteOneByIdRequest" [color="black", fontcolor="black", label=<{DeleteOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.locations.delete_one_by_id_request.DeleteOneByIdRequest" [color="black", fontcolor="black", label=<{DeleteOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.roles.delete_one_by_id_request.DeleteOneByIdRequest" [color="black", fontcolor="black", label=<{DeleteOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.delete_one_by_id_request.DeleteOneByIdRequest" [color="black", fontcolor="black", label=<{DeleteOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.delete_one_by_id_request.DeleteOneByIdRequest" [color="black", fontcolor="black", label=<{DeleteOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.entities.file.File" [color="black", fontcolor="black", label=<{File|content : bytes<br ALIGN="LEFT"/>created_at : datetime<br ALIGN="LEFT"/>description : str<br ALIGN="LEFT"/>extension : str<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>updated_at : datetime<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.outers.interfaces.deliveries.controllers.file_controller.FileController" [color="black", fontcolor="black", label=<{FileController|file_management<br ALIGN="LEFT"/>|create_one(body: CreateBody): Content[File]<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): Content[File]<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, body: PatchBody): Content[File]<br ALIGN="LEFT"/>read_all(request: Request): Content[List[File]]<br ALIGN="LEFT"/>read_one_by_id(id: UUID): Content[File]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.use_cases.managements.file_management.FileManagement" [color="black", fontcolor="black", label=<{FileManagement|file_repository<br ALIGN="LEFT"/>management_utility<br ALIGN="LEFT"/>|create_one(request: CreateOneRequest): Content[File]<br ALIGN="LEFT"/>delete_one_by_id(request: DeleteOneByIdRequest): Content[File]<br ALIGN="LEFT"/>patch_one_by_id(request: PatchOneByIdRequest): Content[File]<br ALIGN="LEFT"/>read_all(request: ReadAllRequest): Content[List[File]]<br ALIGN="LEFT"/>read_one_by_id(request: ReadOneByIdRequest): Content[File]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.outers.repositories.file_repository.FileRepository" [color="black", fontcolor="black", label=<{FileRepository|datastore_utility<br ALIGN="LEFT"/>|create_one(entity: File): File<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): File<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, entity: File): File<br ALIGN="LEFT"/>read_all(): List[File]<br ALIGN="LEFT"/>read_all_by_account_id(account_id: UUID): List[File]<br ALIGN="LEFT"/>read_all_by_item_id(item_id: UUID): List[File]<br ALIGN="LEFT"/>read_one_by_id(id: UUID): File<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.outers.interfaces.deliveries.controllers.forecast_controller.ForecastController" [color="black", fontcolor="black", label=<{ForecastController|item_stock_forecast<br ALIGN="LEFT"/>item_transaction_forecast<br ALIGN="LEFT"/>|item_stock(item_id: UUID, body: StockForecastBody): Content[ItemStockForecastResponse]<br ALIGN="LEFT"/>item_transaction(item_id: UUID, body: TransactionForecastBody): Content[ItemTransactionForecastResponse]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.models.entities.inventory_control.InventoryControl" [color="black", fontcolor="black", label=<{InventoryControl|account_id : UUID<br ALIGN="LEFT"/>created_at : datetime<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>item_id : UUID<br ALIGN="LEFT"/>quantity_after : float<br ALIGN="LEFT"/>quantity_before : float<br ALIGN="LEFT"/>timestamp : datetime<br ALIGN="LEFT"/>updated_at : datetime<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.outers.interfaces.deliveries.controllers.inventory_control_controller.InventoryControlController" [color="black", fontcolor="black", label=<{InventoryControlController|inventory_control_management<br ALIGN="LEFT"/>|create_one(body: CreateBody): Content[InventoryControl]<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): Content[InventoryControl]<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, body: PatchBody): Content[InventoryControl]<br ALIGN="LEFT"/>read_all(request: Request): Content[List[InventoryControl]]<br ALIGN="LEFT"/>read_one_by_id(id: UUID): Content[InventoryControl]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.use_cases.managements.inventory_control_management.InventoryControlManagement" [color="black", fontcolor="black", label=<{InventoryControlManagement|inventory_control_repository<br ALIGN="LEFT"/>management_utility<br ALIGN="LEFT"/>|create_one(request: CreateOneRequest): Content[InventoryControl]<br ALIGN="LEFT"/>delete_one_by_id(request: DeleteOneByIdRequest): Content[InventoryControl]<br ALIGN="LEFT"/>patch_one_by_id(request: PatchOneByIdRequest): Content[InventoryControl]<br ALIGN="LEFT"/>read_all(request: ReadAllRequest): Content[List[InventoryControl]]<br ALIGN="LEFT"/>read_one_by_id(request: ReadOneByIdRequest): Content[InventoryControl]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.outers.repositories.inventory_control_repository.InventoryControlRepository" [color="black", fontcolor="black", label=<{InventoryControlRepository|datastore_utility<br ALIGN="LEFT"/>|create_one(entity: InventoryControl): InventoryControl<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): InventoryControl<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, entity: InventoryControl): InventoryControl<br ALIGN="LEFT"/>read_all(): List[InventoryControl]<br ALIGN="LEFT"/>read_all_by_item_id(item_id: UUID): List[InventoryControl]<br ALIGN="LEFT"/>read_one_by_id(id: UUID): InventoryControl<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.models.entities.item.Item" [color="black", fontcolor="black", label=<{Item|code : str<br ALIGN="LEFT"/>created_at : datetime<br ALIGN="LEFT"/>description : str<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>location_id : UUID<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>quantity : float<br ALIGN="LEFT"/>type : str<br ALIGN="LEFT"/>unit_cost_price : float<br ALIGN="LEFT"/>unit_name : str<br ALIGN="LEFT"/>unit_sell_price : float<br ALIGN="LEFT"/>updated_at : datetime<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.entities.item_bundle_map.ItemBundleMap" [color="black", fontcolor="black", label=<{ItemBundleMap|created_at : datetime<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>quantity : float<br ALIGN="LEFT"/>sub_item_id : UUID<br ALIGN="LEFT"/>super_item_id : UUID<br ALIGN="LEFT"/>updated_at : datetime<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.outers.interfaces.deliveries.controllers.item_bundle_map_controller.ItemBundleMapController" [color="black", fontcolor="black", label=<{ItemBundleMapController|item_bundle_map_management<br ALIGN="LEFT"/>|create_one(body: CreateBody): Content[ItemBundleMap]<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): Content[ItemBundleMap]<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, body: PatchBody): Content[ItemBundleMap]<br ALIGN="LEFT"/>read_all(request: Request): Content[List[ItemBundleMap]]<br ALIGN="LEFT"/>read_one_by_id(id: UUID): Content[ItemBundleMap]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.use_cases.managements.item_bundle_map_management.ItemBundleMapManagement" [color="black", fontcolor="black", label=<{ItemBundleMapManagement|item_bundle_map_repository<br ALIGN="LEFT"/>management_utility<br ALIGN="LEFT"/>|create_one(request: CreateOneRequest): Content[ItemBundleMap]<br ALIGN="LEFT"/>delete_one_by_id(request: DeleteOneByIdRequest): Content[ItemBundleMap]<br ALIGN="LEFT"/>patch_one_by_id(request: PatchOneByIdRequest): Content[ItemBundleMap]<br ALIGN="LEFT"/>read_all(request: ReadAllRequest): Content[List[ItemBundleMap]]<br ALIGN="LEFT"/>read_one_by_id(request: ReadOneByIdRequest): Content[ItemBundleMap]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.outers.repositories.item_bundle_map_repository.ItemBundleMapRepository" [color="black", fontcolor="black", label=<{ItemBundleMapRepository|datastore_utility<br ALIGN="LEFT"/>|create_one(entity: ItemBundleMap): ItemBundleMap<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): ItemBundleMap<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, entity: ItemBundleMap): ItemBundleMap<br ALIGN="LEFT"/>read_all(): List[ItemBundleMap]<br ALIGN="LEFT"/>read_one_by_id(id: UUID): ItemBundleMap<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.outers.interfaces.deliveries.controllers.item_controller.ItemController" [color="black", fontcolor="black", label=<{ItemController|item_management<br ALIGN="LEFT"/>|create_one(body: CreateBody): Content[Item]<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): Content[Item]<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, body: PatchBody): Content[Item]<br ALIGN="LEFT"/>read_all(request: Request): Content[List[Item]]<br ALIGN="LEFT"/>read_one_by_id(id: UUID): Content[Item]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.models.entities.item_file_map.ItemFileMap" [color="black", fontcolor="black", label=<{ItemFileMap|created_at : datetime<br ALIGN="LEFT"/>file_id : UUID<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>item_id : UUID<br ALIGN="LEFT"/>updated_at : datetime<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.outers.interfaces.deliveries.controllers.item_file_map_controller.ItemFileMapController" [color="black", fontcolor="black", label=<{ItemFileMapController|item_file_map_management<br ALIGN="LEFT"/>|create_one(body: CreateBody): Content[ItemFileMap]<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): Content[ItemFileMap]<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, body: PatchBody): Content[ItemFileMap]<br ALIGN="LEFT"/>read_all(request: Request): Content[List[ItemFileMap]]<br ALIGN="LEFT"/>read_one_by_id(id: UUID): Content[ItemFileMap]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.use_cases.managements.item_file_map_management.ItemFileMapManagement" [color="black", fontcolor="black", label=<{ItemFileMapManagement|item_file_map_repository<br ALIGN="LEFT"/>management_utility<br ALIGN="LEFT"/>|create_one(request: CreateOneRequest): Content[ItemFileMap]<br ALIGN="LEFT"/>delete_one_by_id(request: DeleteOneByIdRequest): Content[ItemFileMap]<br ALIGN="LEFT"/>patch_one_by_id(request: PatchOneByIdRequest): Content[ItemFileMap]<br ALIGN="LEFT"/>read_all(request: ReadAllRequest): Content[List[ItemFileMap]]<br ALIGN="LEFT"/>read_one_by_id(request: ReadOneByIdRequest): Content[ItemFileMap]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.outers.repositories.item_file_map_repository.ItemFileMapRepository" [color="black", fontcolor="black", label=<{ItemFileMapRepository|datastore_utility<br ALIGN="LEFT"/>|create_one(entity: ItemFileMap): ItemFileMap<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): ItemFileMap<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, entity: ItemFileMap): ItemFileMap<br ALIGN="LEFT"/>read_all(): List[ItemFileMap]<br ALIGN="LEFT"/>read_one_by_id(id: UUID): ItemFileMap<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.use_cases.managements.item_management.ItemManagement" [color="black", fontcolor="black", label=<{ItemManagement|item_repository<br ALIGN="LEFT"/>management_utility<br ALIGN="LEFT"/>|create_one(request: CreateOneRequest): Content[Item]<br ALIGN="LEFT"/>delete_one_by_id(request: DeleteOneByIdRequest): Content[Item]<br ALIGN="LEFT"/>patch_one_by_id(request: PatchOneByIdRequest): Content[Item]<br ALIGN="LEFT"/>read_all(request: ReadAllRequest): Content[List[Item]]<br ALIGN="LEFT"/>read_one_by_id(request: ReadOneByIdRequest): Content[Item]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.outers.repositories.item_repository.ItemRepository" [color="black", fontcolor="black", label=<{ItemRepository|datastore_utility<br ALIGN="LEFT"/>|create_one(entity: Item): Item<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): Item<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, entity: Item): Item<br ALIGN="LEFT"/>read_all(): List[Item]<br ALIGN="LEFT"/>read_all_by_account_id(account_id: UUID): List[Item]<br ALIGN="LEFT"/>read_all_by_location_id(location_id: UUID): List[Item]<br ALIGN="LEFT"/>read_one_by_id(id: UUID): Item<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.use_cases.forecasts.item_stock_forecast.ItemStockForecast" [color="black", fontcolor="black", label=<{ItemStockForecast|inventory_control_repository<br ALIGN="LEFT"/>|forecast(request: StockForecastByItemIdRequest): Content[ItemStockForecastResponse]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.responses.forecast.item_stock_forecast_response.ItemStockForecastResponse" [color="black", fontcolor="black", label=<{ItemStockForecastResponse|metric<br ALIGN="LEFT"/>prediction<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.use_cases.forecasts.item_transaction_forecast.ItemTransactionForecast" [color="black", fontcolor="black", label=<{ItemTransactionForecast|transaction_item_map_repository<br ALIGN="LEFT"/>|forecast(request: TransactionForecastByItemIdRequest): Content[ItemTransactionForecastResponse]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.responses.forecast.item_transaction_forecast_response.ItemTransactionForecastResponse" [color="black", fontcolor="black", label=<{ItemTransactionForecastResponse|metric<br ALIGN="LEFT"/>prediction<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.entities.location.Location" [color="black", fontcolor="black", label=<{Location|address : str<br ALIGN="LEFT"/>company_id : UUID<br ALIGN="LEFT"/>created_at : datetime<br ALIGN="LEFT"/>description : str<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>updated_at : datetime<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.outers.interfaces.deliveries.controllers.location_controller.LocationController" [color="black", fontcolor="black", label=<{LocationController|location_management<br ALIGN="LEFT"/>|create_one(body: CreateBody): Content[Location]<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): Content[Location]<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, body: PatchBody): Content[Location]<br ALIGN="LEFT"/>read_all(request: Request): Content[List[Location]]<br ALIGN="LEFT"/>read_one_by_id(id: UUID): Content[Location]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.use_cases.managements.location_management.LocationManagement" [color="black", fontcolor="black", label=<{LocationManagement|location_repository<br ALIGN="LEFT"/>management_utility<br ALIGN="LEFT"/>|create_one(request: CreateOneRequest): Content[Location]<br ALIGN="LEFT"/>delete_one_by_id(request: DeleteOneByIdRequest): Content[Location]<br ALIGN="LEFT"/>patch_one_by_id(request: PatchOneByIdRequest): Content[Location]<br ALIGN="LEFT"/>read_all(request: ReadAllRequest): Content[List[Location]]<br ALIGN="LEFT"/>read_one_by_id(request: ReadOneByIdRequest): Content[Location]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.authentications.registers.location_register.LocationRegister" [color="black", fontcolor="black", label=<{LocationRegister|address : str<br ALIGN="LEFT"/>description : str<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.outers.repositories.location_repository.LocationRepository" [color="black", fontcolor="black", label=<{LocationRepository|datastore_utility<br ALIGN="LEFT"/>|create_one(entity: Location): Location<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): Location<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, entity: Location): Location<br ALIGN="LEFT"/>read_all(): List[Location]<br ALIGN="LEFT"/>read_all_by_account_id(account_id: UUID): List[Location]<br ALIGN="LEFT"/>read_all_by_company_id(company_id: UUID): List[Location]<br ALIGN="LEFT"/>read_all_by_item_id(item_id: UUID): List[Location]<br ALIGN="LEFT"/>read_one_by_id(id: UUID): Location<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.use_cases.authentications.login_authentication.LoginAuthentication" [color="black", fontcolor="black", label=<{LoginAuthentication|account_management<br ALIGN="LEFT"/>|login_by_email_and_password(request: LoginByEmailAndPasswordRequest): Content[LoginResponse]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.authentications.logins.login_by_email_and_password_body.LoginByEmailAndPasswordBody" [color="black", fontcolor="black", label=<{LoginByEmailAndPasswordBody|email : str<br ALIGN="LEFT"/>password : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.authentications.logins.login_by_email_and_password_request.LoginByEmailAndPasswordRequest" [color="black", fontcolor="black", label=<{LoginByEmailAndPasswordRequest|email : str<br ALIGN="LEFT"/>password : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.responses.authentications.logins.login_response.LoginResponse" [color="black", fontcolor="black", label=<{LoginResponse|entity<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.outers.utilities.management_utility.ManagementUtility" [color="black", fontcolor="black", label=<{ManagementUtility|<br ALIGN="LEFT"/>|filter(query_parameter: Dict[str, str], entity: BaseEntity): bool<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.models.value_objects.forecasts.metric_forecast.MetricForecast" [color="black", fontcolor="black", label=<{MetricForecast|mae : float<br ALIGN="LEFT"/>smape : float<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.accounts.patch_body.PatchBody" [color="black", fontcolor="black", label=<{PatchBody|email : str<br ALIGN="LEFT"/>location_id : UUID<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>password : str<br ALIGN="LEFT"/>role_id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.companies.patch_body.PatchBody" [color="black", fontcolor="black", label=<{PatchBody|address : str<br ALIGN="LEFT"/>description : str<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.files.patch_body.PatchBody" [color="black", fontcolor="black", label=<{PatchBody|content : bytes<br ALIGN="LEFT"/>description : str<br ALIGN="LEFT"/>extension : str<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.inventory_controls.patch_body.PatchBody" [color="black", fontcolor="black", label=<{PatchBody|account_id : UUID<br ALIGN="LEFT"/>item_id : UUID<br ALIGN="LEFT"/>quantity_after : float<br ALIGN="LEFT"/>quantity_before : float<br ALIGN="LEFT"/>timestamp : datetime<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.items.patch_body.PatchBody" [color="black", fontcolor="black", label=<{PatchBody|code : str<br ALIGN="LEFT"/>description : str<br ALIGN="LEFT"/>location_id : UUID<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>quantity : float<br ALIGN="LEFT"/>type : str<br ALIGN="LEFT"/>unit_cost_price : float<br ALIGN="LEFT"/>unit_name : str<br ALIGN="LEFT"/>unit_sell_price : float<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.patch_body.PatchBody" [color="black", fontcolor="black", label=<{PatchBody|quantity : float<br ALIGN="LEFT"/>sub_item_id : UUID<br ALIGN="LEFT"/>super_item_id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.item_file_maps.patch_body.PatchBody" [color="black", fontcolor="black", label=<{PatchBody|file_id : UUID<br ALIGN="LEFT"/>item_id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.locations.patch_body.PatchBody" [color="black", fontcolor="black", label=<{PatchBody|address : str<br ALIGN="LEFT"/>company_id : UUID<br ALIGN="LEFT"/>description : str<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.roles.patch_body.PatchBody" [color="black", fontcolor="black", label=<{PatchBody|description : str<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.patch_body.PatchBody" [color="black", fontcolor="black", label=<{PatchBody|account_id : UUID<br ALIGN="LEFT"/>sell_price : float<br ALIGN="LEFT"/>timestamp : datetime<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.patch_body.PatchBody" [color="black", fontcolor="black", label=<{PatchBody|item_id : UUID<br ALIGN="LEFT"/>quantity : float<br ALIGN="LEFT"/>sell_price : float<br ALIGN="LEFT"/>transaction_id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.accounts.patch_one_by_id_request.PatchOneByIdRequest" [color="black", fontcolor="black", label=<{PatchOneByIdRequest|body<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.companies.patch_one_by_id_request.PatchOneByIdRequest" [color="black", fontcolor="black", label=<{PatchOneByIdRequest|body<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.files.patch_one_by_id_request.PatchOneByIdRequest" [color="black", fontcolor="black", label=<{PatchOneByIdRequest|body<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.inventory_controls.patch_one_by_id_request.PatchOneByIdRequest" [color="black", fontcolor="black", label=<{PatchOneByIdRequest|body<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.items.patch_one_by_id_request.PatchOneByIdRequest" [color="black", fontcolor="black", label=<{PatchOneByIdRequest|body<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.patch_one_by_id_request.PatchOneByIdRequest" [color="black", fontcolor="black", label=<{PatchOneByIdRequest|body<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.item_file_maps.patch_one_by_id_request.PatchOneByIdRequest" [color="black", fontcolor="black", label=<{PatchOneByIdRequest|body<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.locations.patch_one_by_id_request.PatchOneByIdRequest" [color="black", fontcolor="black", label=<{PatchOneByIdRequest|body<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.roles.patch_one_by_id_request.PatchOneByIdRequest" [color="black", fontcolor="black", label=<{PatchOneByIdRequest|body<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.patch_one_by_id_request.PatchOneByIdRequest" [color="black", fontcolor="black", label=<{PatchOneByIdRequest|body<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.patch_one_by_id_request.PatchOneByIdRequest" [color="black", fontcolor="black", label=<{PatchOneByIdRequest|body<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.forecasts.prediction_forecast.PredictionForecast" [color="black", fontcolor="black", label=<{PredictionForecast|future : list<br ALIGN="LEFT"/>past : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.accounts.read_all_by_company_id_request.ReadAllByCompanyIdRequest" [color="black", fontcolor="black", label=<{ReadAllByCompanyIdRequest|company_id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.accounts.read_all_request.ReadAllRequest" [color="black", fontcolor="black", label=<{ReadAllRequest|query_parameter : Dict[str, str]<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.companies.read_all_request.ReadAllRequest" [color="black", fontcolor="black", label=<{ReadAllRequest|query_parameter : Dict[str, str]<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.files.read_all_request.ReadAllRequest" [color="black", fontcolor="black", label=<{ReadAllRequest|query_parameter : Dict[str, str]<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.inventory_controls.read_all_request.ReadAllRequest" [color="black", fontcolor="black", label=<{ReadAllRequest|query_parameter : Dict[str, str]<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.items.read_all_request.ReadAllRequest" [color="black", fontcolor="black", label=<{ReadAllRequest|query_parameter : Dict[str, str]<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.read_all_request.ReadAllRequest" [color="black", fontcolor="black", label=<{ReadAllRequest|query_parameter : Dict[str, str]<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.item_file_maps.read_all_request.ReadAllRequest" [color="black", fontcolor="black", label=<{ReadAllRequest|query_parameter : Dict[str, str]<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.locations.read_all_request.ReadAllRequest" [color="black", fontcolor="black", label=<{ReadAllRequest|query_parameter : Dict[str, str]<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.roles.read_all_request.ReadAllRequest" [color="black", fontcolor="black", label=<{ReadAllRequest|query_parameter : Dict[str, str]<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.read_all_request.ReadAllRequest" [color="black", fontcolor="black", label=<{ReadAllRequest|query_parameter : Dict[str, str]<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.read_all_request.ReadAllRequest" [color="black", fontcolor="black", label=<{ReadAllRequest|query_parameter : Dict[str, str]<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.companies.read_one_by_account_id_request.ReadOneByAccountIdRequest" [color="black", fontcolor="black", label=<{ReadOneByAccountIdRequest|account_id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.accounts.read_one_by_id_request.ReadOneByIdRequest" [color="black", fontcolor="black", label=<{ReadOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.companies.read_one_by_id_request.ReadOneByIdRequest" [color="black", fontcolor="black", label=<{ReadOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.files.read_one_by_id_request.ReadOneByIdRequest" [color="black", fontcolor="black", label=<{ReadOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.inventory_controls.read_one_by_id_request.ReadOneByIdRequest" [color="black", fontcolor="black", label=<{ReadOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.items.read_one_by_id_request.ReadOneByIdRequest" [color="black", fontcolor="black", label=<{ReadOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.read_one_by_id_request.ReadOneByIdRequest" [color="black", fontcolor="black", label=<{ReadOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.item_file_maps.read_one_by_id_request.ReadOneByIdRequest" [color="black", fontcolor="black", label=<{ReadOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.locations.read_one_by_id_request.ReadOneByIdRequest" [color="black", fontcolor="black", label=<{ReadOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.roles.read_one_by_id_request.ReadOneByIdRequest" [color="black", fontcolor="black", label=<{ReadOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.read_one_by_id_request.ReadOneByIdRequest" [color="black", fontcolor="black", label=<{ReadOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.read_one_by_id_request.ReadOneByIdRequest" [color="black", fontcolor="black", label=<{ReadOneByIdRequest|id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.use_cases.authentications.register_authentication.RegisterAuthentication" [color="black", fontcolor="black", label=<{RegisterAuthentication|account_management<br ALIGN="LEFT"/>company_management<br ALIGN="LEFT"/>location_management<br ALIGN="LEFT"/>role_management<br ALIGN="LEFT"/>|register_by_email_and_password(request: RegisterByEmailAndPasswordRequest): Content[RegisterResponse]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.authentications.registers.register_by_email_and_password_body.RegisterByEmailAndPasswordBody" [color="black", fontcolor="black", label=<{RegisterByEmailAndPasswordBody|account<br ALIGN="LEFT"/>company<br ALIGN="LEFT"/>location<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.authentications.registers.register_by_email_and_password_request.RegisterByEmailAndPasswordRequest" [color="black", fontcolor="black", label=<{RegisterByEmailAndPasswordRequest|account<br ALIGN="LEFT"/>company<br ALIGN="LEFT"/>location<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.responses.authentications.registers.register_response.RegisterResponse" [color="black", fontcolor="black", label=<{RegisterResponse|entity<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.entities.role.Role" [color="black", fontcolor="black", label=<{Role|created_at : datetime<br ALIGN="LEFT"/>description : str<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>updated_at : datetime<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.outers.interfaces.deliveries.controllers.role_controller.RoleController" [color="black", fontcolor="black", label=<{RoleController|role_management<br ALIGN="LEFT"/>|create_one(body: CreateBody): Content[Role]<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): Content[Role]<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, body: PatchBody): Content[Role]<br ALIGN="LEFT"/>read_all(request: Request): Content[List[Role]]<br ALIGN="LEFT"/>read_one_by_id(id: UUID): Content[Role]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.use_cases.managements.role_management.RoleManagement" [color="black", fontcolor="black", label=<{RoleManagement|management_utility<br ALIGN="LEFT"/>role_repository<br ALIGN="LEFT"/>|create_one(request: CreateOneRequest): Content[Role]<br ALIGN="LEFT"/>delete_one_by_id(request: DeleteOneByIdRequest): Content[Role]<br ALIGN="LEFT"/>patch_one_by_id(request: PatchOneByIdRequest): Content[Role]<br ALIGN="LEFT"/>read_all(request: ReadAllRequest): Content[List[Role]]<br ALIGN="LEFT"/>read_one_by_id(request: ReadOneByIdRequest): Content[Role]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.outers.repositories.role_repository.RoleRepository" [color="black", fontcolor="black", label=<{RoleRepository|datastore_utility<br ALIGN="LEFT"/>|create_one(entity: Role): Role<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): Role<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, entity: Role): Role<br ALIGN="LEFT"/>read_all(): List[Role]<br ALIGN="LEFT"/>read_all_by_account_id(account_id: UUID): List[Role]<br ALIGN="LEFT"/>read_one_by_id(id: UUID): Role<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.forecasts.item_stocks.stock_forecast_body.StockForecastBody" [color="black", fontcolor="black", label=<{StockForecastBody|horizon : int<br ALIGN="LEFT"/>resample : str<br ALIGN="LEFT"/>test_size : float<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.forecasts.item_stocks.stock_forecast_by_item_id_request.StockForecastByItemIdRequest" [color="black", fontcolor="black", label=<{StockForecastByItemIdRequest|horizon : int<br ALIGN="LEFT"/>item_id : UUID<br ALIGN="LEFT"/>resample : str<br ALIGN="LEFT"/>test_size : float<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.entities.transaction.Transaction" [color="black", fontcolor="black", label=<{Transaction|account_id : UUID<br ALIGN="LEFT"/>created_at : datetime<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>sell_price : float<br ALIGN="LEFT"/>timestamp : datetime<br ALIGN="LEFT"/>updated_at : datetime<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.outers.interfaces.deliveries.controllers.transaction_controller.TransactionController" [color="black", fontcolor="black", label=<{TransactionController|transaction_management<br ALIGN="LEFT"/>|checkout(body: CheckoutBody): Content[CheckoutResponse]<br ALIGN="LEFT"/>create_one(body: CreateBody): Content[Transaction]<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): Content[Transaction]<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, body: PatchBody): Content[Transaction]<br ALIGN="LEFT"/>read_all(request: Request): Content[List[Transaction]]<br ALIGN="LEFT"/>read_one_by_id(id: UUID): Content[Transaction]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.forecasts.item_transactions.transaction_forecast_body.TransactionForecastBody" [color="black", fontcolor="black", label=<{TransactionForecastBody|horizon : int<br ALIGN="LEFT"/>resample : str<br ALIGN="LEFT"/>test_size : float<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.value_objects.contracts.requests.forecasts.item_transactions.transaction_forecast_by_item_id_request.TransactionForecastByItemIdRequest" [color="black", fontcolor="black", label=<{TransactionForecastByItemIdRequest|horizon : int<br ALIGN="LEFT"/>item_id : UUID<br ALIGN="LEFT"/>resample : str<br ALIGN="LEFT"/>test_size : float<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.models.entities.transaction_item_map.TransactionItemMap" [color="black", fontcolor="black", label=<{TransactionItemMap|created_at : datetime<br ALIGN="LEFT"/>id : UUID<br ALIGN="LEFT"/>item_id : UUID<br ALIGN="LEFT"/>quantity : float<br ALIGN="LEFT"/>sell_price : float<br ALIGN="LEFT"/>transaction_id : UUID<br ALIGN="LEFT"/>updated_at : datetime<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.outers.interfaces.deliveries.controllers.transaction_item_map_controller.TransactionItemMapController" [color="black", fontcolor="black", label=<{TransactionItemMapController|transaction_item_map_management<br ALIGN="LEFT"/>|create_one(body: CreateBody): Content[TransactionItemMap]<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): Content[TransactionItemMap]<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, body: PatchBody): Content[TransactionItemMap]<br ALIGN="LEFT"/>read_all(request: Request): Content[List[TransactionItemMap]]<br ALIGN="LEFT"/>read_one_by_id(id: UUID): Content[TransactionItemMap]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.models.value_objects.forecasts.transaction_item_map_forecast.TransactionItemMapForecast" [color="black", fontcolor="black", label=<{TransactionItemMapForecast|item_id : UUID<br ALIGN="LEFT"/>quantity : float<br ALIGN="LEFT"/>timestamp : datetime<br ALIGN="LEFT"/>transaction_id : UUID<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"app.inners.use_cases.managements.transaction_item_map_management.TransactionItemMapManagement" [color="black", fontcolor="black", label=<{TransactionItemMapManagement|management_utility<br ALIGN="LEFT"/>transaction_item_map_repository<br ALIGN="LEFT"/>|create_one(request: CreateOneRequest): Content[TransactionItemMap]<br ALIGN="LEFT"/>delete_one_by_id(request: DeleteOneByIdRequest): Content[TransactionItemMap]<br ALIGN="LEFT"/>patch_one_by_id(request: PatchOneByIdRequest): Content[TransactionItemMap]<br ALIGN="LEFT"/>read_all(request: ReadAllRequest): Content[List[TransactionItemMap]]<br ALIGN="LEFT"/>read_one_by_id(request: ReadOneByIdRequest): Content[TransactionItemMap]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.outers.repositories.transaction_item_map_repository.TransactionItemMapRepository" [color="black", fontcolor="black", label=<{TransactionItemMapRepository|datastore_utility<br ALIGN="LEFT"/>|create_one(entity: TransactionItemMap): TransactionItemMap<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): TransactionItemMap<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, entity: TransactionItemMap): TransactionItemMap<br ALIGN="LEFT"/>read_all(): List[TransactionItemMap]<br ALIGN="LEFT"/>read_all_by_account_id(account_id: UUID): List[TransactionItemMap]<br ALIGN="LEFT"/>read_all_by_item_id(item_id: UUID): List[TransactionItemMapForecast]<br ALIGN="LEFT"/>read_all_by_location_id(location_Id: UUID): List[TransactionItemMap]<br ALIGN="LEFT"/>read_one_by_id(id: UUID): TransactionItemMap<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.use_cases.managements.transaction_management.TransactionManagement" [color="black", fontcolor="black", label=<{TransactionManagement|inventory_control_repository<br ALIGN="LEFT"/>item_repository<br ALIGN="LEFT"/>management_utility<br ALIGN="LEFT"/>transaction_item_map_repository<br ALIGN="LEFT"/>transaction_repository<br ALIGN="LEFT"/>|checkout(request: CheckoutRequest): Content[CheckoutResponse]<br ALIGN="LEFT"/>create_one(request: CreateOneRequest): Content[Transaction]<br ALIGN="LEFT"/>delete_one_by_id(request: DeleteOneByIdRequest): Content[Transaction]<br ALIGN="LEFT"/>patch_one_by_id(request: PatchOneByIdRequest): Content[Transaction]<br ALIGN="LEFT"/>read_all(request: ReadAllRequest): Content[List[Transaction]]<br ALIGN="LEFT"/>read_one_by_id(request: ReadOneByIdRequest): Content[Transaction]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.outers.repositories.transaction_repository.TransactionRepository" [color="black", fontcolor="black", label=<{TransactionRepository|datastore_utility<br ALIGN="LEFT"/>|create_one(entity: Transaction): Transaction<br ALIGN="LEFT"/>delete_one_by_id(id: UUID): Transaction<br ALIGN="LEFT"/>patch_one_by_id(id: UUID, entity: Transaction): Transaction<br ALIGN="LEFT"/>read_all(): List[Transaction]<br ALIGN="LEFT"/>read_all_by_location_id(location_id)<br ALIGN="LEFT"/>read_one_by_id(id: UUID): Transaction<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"app.inners.models.entities.account.Account" -> "app.inners.models.entities.base_entity.BaseEntity" [arrowhead="empty", arrowtail="none"];
"app.inners.models.entities.company.Company" -> "app.inners.models.entities.base_entity.BaseEntity" [arrowhead="empty", arrowtail="none"];
"app.inners.models.entities.file.File" -> "app.inners.models.entities.base_entity.BaseEntity" [arrowhead="empty", arrowtail="none"];
"app.inners.models.entities.inventory_control.InventoryControl" -> "app.inners.models.entities.base_entity.BaseEntity" [arrowhead="empty", arrowtail="none"];
"app.inners.models.entities.item.Item" -> "app.inners.models.entities.base_entity.BaseEntity" [arrowhead="empty", arrowtail="none"];
"app.inners.models.entities.item_bundle_map.ItemBundleMap" -> "app.inners.models.entities.base_entity.BaseEntity" [arrowhead="empty", arrowtail="none"];
"app.inners.models.entities.item_file_map.ItemFileMap" -> "app.inners.models.entities.base_entity.BaseEntity" [arrowhead="empty", arrowtail="none"];
"app.inners.models.entities.location.Location" -> "app.inners.models.entities.base_entity.BaseEntity" [arrowhead="empty", arrowtail="none"];
"app.inners.models.entities.role.Role" -> "app.inners.models.entities.base_entity.BaseEntity" [arrowhead="empty", arrowtail="none"];
"app.inners.models.entities.transaction.Transaction" -> "app.inners.models.entities.base_entity.BaseEntity" [arrowhead="empty", arrowtail="none"];
"app.inners.models.entities.transaction_item_map.TransactionItemMap" -> "app.inners.models.entities.base_entity.BaseEntity" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.authentications.logins.login_by_email_and_password_body.LoginByEmailAndPasswordBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.authentications.logins.login_by_email_and_password_request.LoginByEmailAndPasswordRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.authentications.registers.account_register.AccountRegister" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.authentications.registers.company_register.CompanyRegister" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.authentications.registers.location_register.LocationRegister" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.authentications.registers.register_by_email_and_password_body.RegisterByEmailAndPasswordBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.authentications.registers.register_by_email_and_password_request.RegisterByEmailAndPasswordRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.forecasts.item_stocks.stock_forecast_body.StockForecastBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.forecasts.item_stocks.stock_forecast_by_item_id_request.StockForecastByItemIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.forecasts.item_transactions.transaction_forecast_body.TransactionForecastBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.forecasts.item_transactions.transaction_forecast_by_item_id_request.TransactionForecastByItemIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.accounts.create_body.CreateBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.accounts.create_one_request.CreateOneRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.accounts.delete_one_by_id_request.DeleteOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.accounts.patch_body.PatchBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.accounts.patch_one_by_id_request.PatchOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.accounts.read_all_by_company_id_request.ReadAllByCompanyIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.accounts.read_all_request.ReadAllRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.accounts.read_one_by_id_request.ReadOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.companies.create_body.CreateBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.companies.create_one_request.CreateOneRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.companies.delete_one_by_id_request.DeleteOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.companies.patch_body.PatchBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.companies.patch_one_by_id_request.PatchOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.companies.read_all_request.ReadAllRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.companies.read_one_by_account_id_request.ReadOneByAccountIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.companies.read_one_by_id_request.ReadOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.files.create_body.CreateBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.files.create_one_request.CreateOneRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.files.delete_one_by_id_request.DeleteOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.files.patch_body.PatchBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.files.patch_one_by_id_request.PatchOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.files.read_all_request.ReadAllRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.files.read_one_by_id_request.ReadOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.inventory_controls.create_body.CreateBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.inventory_controls.create_one_request.CreateOneRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.inventory_controls.delete_one_by_id_request.DeleteOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.inventory_controls.patch_body.PatchBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.inventory_controls.patch_one_by_id_request.PatchOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.inventory_controls.read_all_request.ReadAllRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.inventory_controls.read_one_by_id_request.ReadOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.create_body.CreateBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.create_one_request.CreateOneRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.delete_one_by_id_request.DeleteOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.patch_body.PatchBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.patch_one_by_id_request.PatchOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.read_all_request.ReadAllRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.read_one_by_id_request.ReadOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.item_file_maps.create_body.CreateBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.item_file_maps.create_one_request.CreateOneRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.item_file_maps.delete_one_by_id_request.DeleteOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.item_file_maps.patch_body.PatchBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.item_file_maps.patch_one_by_id_request.PatchOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.item_file_maps.read_all_request.ReadAllRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.item_file_maps.read_one_by_id_request.ReadOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.items.create_body.CreateBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.items.create_one_request.CreateOneRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.items.delete_one_by_id_request.DeleteOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.items.patch_body.PatchBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.items.patch_one_by_id_request.PatchOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.items.read_all_request.ReadAllRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.items.read_one_by_id_request.ReadOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.locations.create_body.CreateBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.locations.create_one_request.CreateOneRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.locations.delete_one_by_id_request.DeleteOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.locations.patch_body.PatchBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.locations.patch_one_by_id_request.PatchOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.locations.read_all_request.ReadAllRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.locations.read_one_by_id_request.ReadOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.roles.create_body.CreateBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.roles.create_one_request.CreateOneRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.roles.delete_one_by_id_request.DeleteOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.roles.patch_body.PatchBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.roles.patch_one_by_id_request.PatchOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.roles.read_all_request.ReadAllRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.roles.read_one_by_id_request.ReadOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.create_body.CreateBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.create_one_request.CreateOneRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.delete_one_by_id_request.DeleteOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.patch_body.PatchBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.patch_one_by_id_request.PatchOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.read_all_request.ReadAllRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.read_one_by_id_request.ReadOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.checkout_body.CheckoutBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.checkout_request.CheckoutRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.checkout_transaction_body.CheckoutTransactionBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.checkout_transaction_item_map_body.CheckoutTransactionItemMapBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.create_body.CreateBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.create_one_request.CreateOneRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.delete_one_by_id_request.DeleteOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.patch_body.PatchBody" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.patch_one_by_id_request.PatchOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.read_all_request.ReadAllRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.read_one_by_id_request.ReadOneByIdRequest" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.responses.authentications.logins.login_response.LoginResponse" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.responses.authentications.registers.register_response.RegisterResponse" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.responses.content.Content" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.responses.forecast.item_stock_forecast_response.ItemStockForecastResponse" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.responses.forecast.item_transaction_forecast_response.ItemTransactionForecastResponse" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.contracts.responses.managements.transactions.checkout_response.CheckoutResponse" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.forecasts.metric_forecast.MetricForecast" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.forecasts.prediction_forecast.PredictionForecast" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.value_objects.forecasts.transaction_item_map_forecast.TransactionItemMapForecast" -> "app.inners.models.value_objects.base_value_object.BaseValueObject" [arrowhead="empty", arrowtail="none"];
"app.inners.models.entities.account.Account" -> "app.inners.models.value_objects.contracts.responses.authentications.logins.login_response.LoginResponse" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="entity", style="solid"];
"app.inners.models.entities.account.Account" -> "app.inners.models.value_objects.contracts.responses.authentications.registers.register_response.RegisterResponse" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="entity", style="solid"];
"app.inners.models.entities.transaction.Transaction" -> "app.inners.models.value_objects.contracts.responses.managements.transactions.checkout_response.CheckoutResponse" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="transaction", style="solid"];
"app.inners.models.value_objects.contracts.requests.authentications.registers.account_register.AccountRegister" -> "app.inners.models.value_objects.contracts.requests.authentications.registers.register_by_email_and_password_body.RegisterByEmailAndPasswordBody" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="account", style="solid"];
"app.inners.models.value_objects.contracts.requests.authentications.registers.account_register.AccountRegister" -> "app.inners.models.value_objects.contracts.requests.authentications.registers.register_by_email_and_password_request.RegisterByEmailAndPasswordRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="account", style="solid"];
"app.inners.models.value_objects.contracts.requests.authentications.registers.company_register.CompanyRegister" -> "app.inners.models.value_objects.contracts.requests.authentications.registers.register_by_email_and_password_body.RegisterByEmailAndPasswordBody" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="company", style="solid"];
"app.inners.models.value_objects.contracts.requests.authentications.registers.company_register.CompanyRegister" -> "app.inners.models.value_objects.contracts.requests.authentications.registers.register_by_email_and_password_request.RegisterByEmailAndPasswordRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="company", style="solid"];
"app.inners.models.value_objects.contracts.requests.authentications.registers.location_register.LocationRegister" -> "app.inners.models.value_objects.contracts.requests.authentications.registers.register_by_email_and_password_body.RegisterByEmailAndPasswordBody" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="location", style="solid"];
"app.inners.models.value_objects.contracts.requests.authentications.registers.location_register.LocationRegister" -> "app.inners.models.value_objects.contracts.requests.authentications.registers.register_by_email_and_password_request.RegisterByEmailAndPasswordRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="location", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.accounts.create_body.CreateBody" -> "app.inners.models.value_objects.contracts.requests.managements.accounts.create_one_request.CreateOneRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.accounts.patch_body.PatchBody" -> "app.inners.models.value_objects.contracts.requests.managements.accounts.patch_one_by_id_request.PatchOneByIdRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.companies.create_body.CreateBody" -> "app.inners.models.value_objects.contracts.requests.managements.companies.create_one_request.CreateOneRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.companies.patch_body.PatchBody" -> "app.inners.models.value_objects.contracts.requests.managements.companies.patch_one_by_id_request.PatchOneByIdRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.files.create_body.CreateBody" -> "app.inners.models.value_objects.contracts.requests.managements.files.create_one_request.CreateOneRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.files.patch_body.PatchBody" -> "app.inners.models.value_objects.contracts.requests.managements.files.patch_one_by_id_request.PatchOneByIdRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.inventory_controls.create_body.CreateBody" -> "app.inners.models.value_objects.contracts.requests.managements.inventory_controls.create_one_request.CreateOneRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.inventory_controls.patch_body.PatchBody" -> "app.inners.models.value_objects.contracts.requests.managements.inventory_controls.patch_one_by_id_request.PatchOneByIdRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.create_body.CreateBody" -> "app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.create_one_request.CreateOneRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.patch_body.PatchBody" -> "app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.patch_one_by_id_request.PatchOneByIdRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.item_file_maps.create_body.CreateBody" -> "app.inners.models.value_objects.contracts.requests.managements.item_file_maps.create_one_request.CreateOneRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.item_file_maps.patch_body.PatchBody" -> "app.inners.models.value_objects.contracts.requests.managements.item_file_maps.patch_one_by_id_request.PatchOneByIdRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.items.create_body.CreateBody" -> "app.inners.models.value_objects.contracts.requests.managements.items.create_one_request.CreateOneRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.items.patch_body.PatchBody" -> "app.inners.models.value_objects.contracts.requests.managements.items.patch_one_by_id_request.PatchOneByIdRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.locations.create_body.CreateBody" -> "app.inners.models.value_objects.contracts.requests.managements.locations.create_one_request.CreateOneRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.locations.patch_body.PatchBody" -> "app.inners.models.value_objects.contracts.requests.managements.locations.patch_one_by_id_request.PatchOneByIdRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.roles.create_body.CreateBody" -> "app.inners.models.value_objects.contracts.requests.managements.roles.create_one_request.CreateOneRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.roles.patch_body.PatchBody" -> "app.inners.models.value_objects.contracts.requests.managements.roles.patch_one_by_id_request.PatchOneByIdRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.create_body.CreateBody" -> "app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.create_one_request.CreateOneRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.patch_body.PatchBody" -> "app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.patch_one_by_id_request.PatchOneByIdRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.checkout_body.CheckoutBody" -> "app.inners.models.value_objects.contracts.requests.managements.transactions.checkout_request.CheckoutRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.checkout_transaction_body.CheckoutTransactionBody" -> "app.inners.models.value_objects.contracts.requests.managements.transactions.checkout_body.CheckoutBody" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="transaction", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.create_body.CreateBody" -> "app.inners.models.value_objects.contracts.requests.managements.transactions.create_one_request.CreateOneRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.contracts.requests.managements.transactions.patch_body.PatchBody" -> "app.inners.models.value_objects.contracts.requests.managements.transactions.patch_one_by_id_request.PatchOneByIdRequest" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="body", style="solid"];
"app.inners.models.value_objects.forecasts.metric_forecast.MetricForecast" -> "app.inners.models.value_objects.contracts.responses.forecast.item_stock_forecast_response.ItemStockForecastResponse" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="metric", style="solid"];
"app.inners.models.value_objects.forecasts.metric_forecast.MetricForecast" -> "app.inners.models.value_objects.contracts.responses.forecast.item_transaction_forecast_response.ItemTransactionForecastResponse" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="metric", style="solid"];
"app.inners.models.value_objects.forecasts.prediction_forecast.PredictionForecast" -> "app.inners.models.value_objects.contracts.responses.forecast.item_stock_forecast_response.ItemStockForecastResponse" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="prediction", style="solid"];
"app.inners.models.value_objects.forecasts.prediction_forecast.PredictionForecast" -> "app.inners.models.value_objects.contracts.responses.forecast.item_transaction_forecast_response.ItemTransactionForecastResponse" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="prediction", style="solid"];
"app.inners.use_cases.authentications.login_authentication.LoginAuthentication" -> "app.outers.interfaces.deliveries.controllers.authentication_controller.AuthenticationController" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="login_authentication", style="solid"];
"app.inners.use_cases.authentications.register_authentication.RegisterAuthentication" -> "app.outers.interfaces.deliveries.controllers.authentication_controller.AuthenticationController" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="register_authentication", style="solid"];
"app.inners.use_cases.forecasts.item_stock_forecast.ItemStockForecast" -> "app.outers.interfaces.deliveries.controllers.forecast_controller.ForecastController" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="item_stock_forecast", style="solid"];
"app.inners.use_cases.forecasts.item_transaction_forecast.ItemTransactionForecast" -> "app.outers.interfaces.deliveries.controllers.forecast_controller.ForecastController" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="item_transaction_forecast", style="solid"];
"app.inners.use_cases.managements.account_management.AccountManagement" -> "app.inners.use_cases.authentications.login_authentication.LoginAuthentication" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="account_management", style="solid"];
"app.inners.use_cases.managements.account_management.AccountManagement" -> "app.inners.use_cases.authentications.register_authentication.RegisterAuthentication" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="account_management", style="solid"];
"app.inners.use_cases.managements.account_management.AccountManagement" -> "app.outers.interfaces.deliveries.controllers.account_controller.AccountController" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="account_management", style="solid"];
"app.inners.use_cases.managements.company_management.CompanyManagement" -> "app.inners.use_cases.authentications.register_authentication.RegisterAuthentication" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="company_management", style="solid"];
"app.inners.use_cases.managements.company_management.CompanyManagement" -> "app.outers.interfaces.deliveries.controllers.company_controller.CompanyController" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="company_management", style="solid"];
"app.inners.use_cases.managements.file_management.FileManagement" -> "app.outers.interfaces.deliveries.controllers.file_controller.FileController" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="file_management", style="solid"];
"app.inners.use_cases.managements.inventory_control_management.InventoryControlManagement" -> "app.outers.interfaces.deliveries.controllers.inventory_control_controller.InventoryControlController" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="inventory_control_management", style="solid"];
"app.inners.use_cases.managements.item_bundle_map_management.ItemBundleMapManagement" -> "app.outers.interfaces.deliveries.controllers.item_bundle_map_controller.ItemBundleMapController" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="item_bundle_map_management", style="solid"];
"app.inners.use_cases.managements.item_file_map_management.ItemFileMapManagement" -> "app.outers.interfaces.deliveries.controllers.item_file_map_controller.ItemFileMapController" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="item_file_map_management", style="solid"];
"app.inners.use_cases.managements.item_management.ItemManagement" -> "app.outers.interfaces.deliveries.controllers.item_controller.ItemController" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="item_management", style="solid"];
"app.inners.use_cases.managements.location_management.LocationManagement" -> "app.inners.use_cases.authentications.register_authentication.RegisterAuthentication" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="location_management", style="solid"];
"app.inners.use_cases.managements.location_management.LocationManagement" -> "app.outers.interfaces.deliveries.controllers.location_controller.LocationController" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="location_management", style="solid"];
"app.inners.use_cases.managements.role_management.RoleManagement" -> "app.inners.use_cases.authentications.register_authentication.RegisterAuthentication" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="role_management", style="solid"];
"app.inners.use_cases.managements.role_management.RoleManagement" -> "app.outers.interfaces.deliveries.controllers.role_controller.RoleController" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="role_management", style="solid"];
"app.inners.use_cases.managements.transaction_item_map_management.TransactionItemMapManagement" -> "app.outers.interfaces.deliveries.controllers.transaction_item_map_controller.TransactionItemMapController" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="transaction_item_map_management", style="solid"];
"app.inners.use_cases.managements.transaction_management.TransactionManagement" -> "app.outers.interfaces.deliveries.controllers.transaction_controller.TransactionController" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="transaction_management", style="solid"];
"app.outers.repositories.account_repository.AccountRepository" -> "app.inners.use_cases.managements.account_management.AccountManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="account_repository", style="solid"];
"app.outers.repositories.company_repository.CompanyRepository" -> "app.inners.use_cases.managements.company_management.CompanyManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="company_repository", style="solid"];
"app.outers.repositories.file_repository.FileRepository" -> "app.inners.use_cases.managements.file_management.FileManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="file_repository", style="solid"];
"app.outers.repositories.inventory_control_repository.InventoryControlRepository" -> "app.inners.use_cases.forecasts.item_stock_forecast.ItemStockForecast" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="inventory_control_repository", style="solid"];
"app.outers.repositories.inventory_control_repository.InventoryControlRepository" -> "app.inners.use_cases.managements.inventory_control_management.InventoryControlManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="inventory_control_repository", style="solid"];
"app.outers.repositories.inventory_control_repository.InventoryControlRepository" -> "app.inners.use_cases.managements.transaction_management.TransactionManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="inventory_control_repository", style="solid"];
"app.outers.repositories.item_bundle_map_repository.ItemBundleMapRepository" -> "app.inners.use_cases.managements.item_bundle_map_management.ItemBundleMapManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="item_bundle_map_repository", style="solid"];
"app.outers.repositories.item_file_map_repository.ItemFileMapRepository" -> "app.inners.use_cases.managements.item_file_map_management.ItemFileMapManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="item_file_map_repository", style="solid"];
"app.outers.repositories.item_repository.ItemRepository" -> "app.inners.use_cases.managements.item_management.ItemManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="item_repository", style="solid"];
"app.outers.repositories.item_repository.ItemRepository" -> "app.inners.use_cases.managements.transaction_management.TransactionManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="item_repository", style="solid"];
"app.outers.repositories.location_repository.LocationRepository" -> "app.inners.use_cases.managements.location_management.LocationManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="location_repository", style="solid"];
"app.outers.repositories.role_repository.RoleRepository" -> "app.inners.use_cases.managements.role_management.RoleManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="role_repository", style="solid"];
"app.outers.repositories.transaction_item_map_repository.TransactionItemMapRepository" -> "app.inners.use_cases.forecasts.item_transaction_forecast.ItemTransactionForecast" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="transaction_item_map_repository", style="solid"];
"app.outers.repositories.transaction_item_map_repository.TransactionItemMapRepository" -> "app.inners.use_cases.managements.transaction_item_map_management.TransactionItemMapManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="transaction_item_map_repository", style="solid"];
"app.outers.repositories.transaction_item_map_repository.TransactionItemMapRepository" -> "app.inners.use_cases.managements.transaction_management.TransactionManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="transaction_item_map_repository", style="solid"];
"app.outers.repositories.transaction_repository.TransactionRepository" -> "app.inners.use_cases.managements.transaction_management.TransactionManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="transaction_repository", style="solid"];
"app.outers.utilities.datastore_utility.DataStoreUtility" -> "app.outers.repositories.account_repository.AccountRepository" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="datastore_utility", style="solid"];
"app.outers.utilities.datastore_utility.DataStoreUtility" -> "app.outers.repositories.company_repository.CompanyRepository" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="datastore_utility", style="solid"];
"app.outers.utilities.datastore_utility.DataStoreUtility" -> "app.outers.repositories.file_repository.FileRepository" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="datastore_utility", style="solid"];
"app.outers.utilities.datastore_utility.DataStoreUtility" -> "app.outers.repositories.inventory_control_repository.InventoryControlRepository" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="datastore_utility", style="solid"];
"app.outers.utilities.datastore_utility.DataStoreUtility" -> "app.outers.repositories.item_bundle_map_repository.ItemBundleMapRepository" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="datastore_utility", style="solid"];
"app.outers.utilities.datastore_utility.DataStoreUtility" -> "app.outers.repositories.item_file_map_repository.ItemFileMapRepository" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="datastore_utility", style="solid"];
"app.outers.utilities.datastore_utility.DataStoreUtility" -> "app.outers.repositories.item_repository.ItemRepository" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="datastore_utility", style="solid"];
"app.outers.utilities.datastore_utility.DataStoreUtility" -> "app.outers.repositories.location_repository.LocationRepository" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="datastore_utility", style="solid"];
"app.outers.utilities.datastore_utility.DataStoreUtility" -> "app.outers.repositories.role_repository.RoleRepository" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="datastore_utility", style="solid"];
"app.outers.utilities.datastore_utility.DataStoreUtility" -> "app.outers.repositories.transaction_item_map_repository.TransactionItemMapRepository" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="datastore_utility", style="solid"];
"app.outers.utilities.datastore_utility.DataStoreUtility" -> "app.outers.repositories.transaction_repository.TransactionRepository" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="datastore_utility", style="solid"];
"app.outers.utilities.management_utility.ManagementUtility" -> "app.inners.use_cases.managements.account_management.AccountManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="management_utility", style="solid"];
"app.outers.utilities.management_utility.ManagementUtility" -> "app.inners.use_cases.managements.company_management.CompanyManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="management_utility", style="solid"];
"app.outers.utilities.management_utility.ManagementUtility" -> "app.inners.use_cases.managements.file_management.FileManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="management_utility", style="solid"];
"app.outers.utilities.management_utility.ManagementUtility" -> "app.inners.use_cases.managements.inventory_control_management.InventoryControlManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="management_utility", style="solid"];
"app.outers.utilities.management_utility.ManagementUtility" -> "app.inners.use_cases.managements.item_bundle_map_management.ItemBundleMapManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="management_utility", style="solid"];
"app.outers.utilities.management_utility.ManagementUtility" -> "app.inners.use_cases.managements.item_file_map_management.ItemFileMapManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="management_utility", style="solid"];
"app.outers.utilities.management_utility.ManagementUtility" -> "app.inners.use_cases.managements.item_management.ItemManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="management_utility", style="solid"];
"app.outers.utilities.management_utility.ManagementUtility" -> "app.inners.use_cases.managements.location_management.LocationManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="management_utility", style="solid"];
"app.outers.utilities.management_utility.ManagementUtility" -> "app.inners.use_cases.managements.role_management.RoleManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="management_utility", style="solid"];
"app.outers.utilities.management_utility.ManagementUtility" -> "app.inners.use_cases.managements.transaction_item_map_management.TransactionItemMapManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="management_utility", style="solid"];
"app.outers.utilities.management_utility.ManagementUtility" -> "app.inners.use_cases.managements.transaction_management.TransactionManagement" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="management_utility", style="solid"];
}
