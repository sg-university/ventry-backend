@startuml classes
set namespaceSeparator none
class "Account" as app.inners.models.entities.account.Account {
  created_at : datetime
  email : str
  id : UUID
  location_id : UUID
  name : str
  password : str
  role_id : UUID
  updated_at : datetime
}
class "AccountController" as app.outers.interfaces.deliveries.controllers.account_controller.AccountController {
  account_management
  create_one(body: CreateBody) -> Content[Account]
  delete_one_by_id(id: UUID) -> Content[Account]
  patch_one_by_id(id: UUID, body: PatchBody) -> Content[Account]
  read_all(request: Request) -> Content[List[Account]]
  read_one_by_id(id: UUID) -> Content[Account]
}
class "AccountManagement" as app.inners.use_cases.managements.account_management.AccountManagement {
  account_repository
  management_utility
  create_one(request: CreateOneRequest) -> Content[Account]
  delete_one_by_id(request: DeleteOneByIdRequest) -> Content[Account]
  patch_one_by_id(request: PatchOneByIdRequest) -> Content[Account]
  read_all(request: ReadAllRequest) -> Content[List[Account]]
  read_all_by_company_id(request: ReadAllByCompanyIdRequest) -> Content[List[Account]]
  read_one_by_email(email: str) -> Content[Account]
  read_one_by_email_and_password(email: str, password: str) -> Content[Account]
  read_one_by_id(request: ReadOneByIdRequest) -> Content[Account]
}
class "AccountRegister" as app.inners.models.value_objects.contracts.requests.authentications.registers.account_register.AccountRegister {
  email : str
  name : str
  password : str
}
class "AccountRepository" as app.outers.repositories.account_repository.AccountRepository {
  datastore_utility
  create_one(entity: Account) -> Account
  delete_one_by_id(id: UUID) -> Account
  patch_one_by_id(id: UUID, entity: Account) -> Account
  read_all() -> List[Account]
  read_all_by_company_id(company_id: UUID) -> List[Account]
  read_one_by_email(email: str) -> Account
  read_one_by_email_and_password(email: str, password: str) -> Account
  read_one_by_id(id: UUID) -> Account
}
class "AuthenticationController" as app.outers.interfaces.deliveries.controllers.authentication_controller.AuthenticationController {
  login_authentication
  register_authentication
  login(body: LoginByEmailAndPasswordBody) -> Content[LoginResponse]
  register(body: RegisterByEmailAndPasswordBody) -> Content[RegisterResponse]
}
class "BaseEntity" as app.inners.models.entities.base_entity.BaseEntity {
  patch_from(entity: dict)
}
class "BaseValueObject" as app.inners.models.value_objects.base_value_object.BaseValueObject {
  patch_from(entity: dict)
}
class "Company" as app.inners.models.entities.company.Company {
  address : str
  created_at : datetime
  description : str
  id : UUID
  name : str
  updated_at : datetime
}
class "CompanyController" as app.outers.interfaces.deliveries.controllers.company_controller.CompanyController {
  company_management
  create_one(body: CreateBody) -> Content[Company]
  delete_one_by_id(id: UUID) -> Content[Company]
  patch_one_by_id(id: UUID, body: PatchBody) -> Content[Company]
  read_all(request: Request) -> Content[List[Company]]
  read_one_by_id(id: UUID) -> Content[Company]
}
class "CompanyManagement" as app.inners.use_cases.managements.company_management.CompanyManagement {
  company_repository
  management_utility
  create_one(request: CreateOneRequest) -> Content[Company]
  delete_one_by_id(request: DeleteOneByIdRequest) -> Content[Company]
  patch_one_by_id(request: PatchOneByIdRequest) -> Content[Company]
  read_all(request: ReadAllRequest) -> Content[List[Company]]
  read_one_by_id(request: ReadOneByIdRequest) -> Content[Company]
}
class "CompanyRegister" as app.inners.models.value_objects.contracts.requests.authentications.registers.company_register.CompanyRegister {
  address : str
  description : str
  name : str
}
class "CompanyRepository" as app.outers.repositories.company_repository.CompanyRepository {
  datastore_utility
  create_one(entity: Company) -> Company
  delete_one_by_id(id: UUID) -> Company
  patch_one_by_id(id: UUID, entity: Company) -> Company
  read_all() -> List[Company]
  read_all_by_account_id(account_id: UUID) -> List[Company]
  read_one_by_id(id: UUID) -> Company
}
class "Config" as app.outers.settings.datastore_settings.DatastoreSetting.Config {
  env_file : str
}
class "Content" as app.inners.models.value_objects.contracts.responses.content.Content {
  data : Optional[T]
  message : str
}
class "CreateBody" as app.inners.models.value_objects.contracts.requests.managements.accounts.create_body.CreateBody {
  email : str
  location_id : UUID
  name : str
  password : str
  role_id : UUID
}
class "CreateBody" as app.inners.models.value_objects.contracts.requests.managements.companies.create_body.CreateBody {
  address : str
  description : str
  name : str
}
class "CreateBody" as app.inners.models.value_objects.contracts.requests.managements.files.create_body.CreateBody {
  content : bytes
  description : str
  extension : str
  name : str
}
class "CreateBody" as app.inners.models.value_objects.contracts.requests.managements.inventory_controls.create_body.CreateBody {
  account_id : UUID
  item_id : UUID
  quantity_after : float
  quantity_before : float
  timestamp : datetime
}
class "CreateBody" as app.inners.models.value_objects.contracts.requests.managements.items.create_body.CreateBody {
  code : str
  description : str
  location_id : UUID
  name : str
  quantity : float
  type : str
  unit_cost_price : float
  unit_name : str
  unit_sell_price : float
}
class "CreateBody" as app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.create_body.CreateBody {
  quantity : float
  sub_item_id : UUID
  super_item_id : UUID
}
class "CreateBody" as app.inners.models.value_objects.contracts.requests.managements.item_file_maps.create_body.CreateBody {
  file_id : UUID
  item_id : UUID
}
class "CreateBody" as app.inners.models.value_objects.contracts.requests.managements.locations.create_body.CreateBody {
  address : str
  company_id : UUID
  description : str
  name : str
}
class "CreateBody" as app.inners.models.value_objects.contracts.requests.managements.roles.create_body.CreateBody {
  description : str
  name : str
}
class "CreateBody" as app.inners.models.value_objects.contracts.requests.managements.transactions.create_body.CreateBody {
  account_id : UUID
  sell_price : float
  timestamp : datetime
}
class "CreateBody" as app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.create_body.CreateBody {
  item_id : UUID
  quantity : float
  sell_price : float
  transaction_id : UUID
}
class "CreateOneRequest" as app.inners.models.value_objects.contracts.requests.managements.accounts.create_one_request.CreateOneRequest {
  body
}
class "CreateOneRequest" as app.inners.models.value_objects.contracts.requests.managements.companies.create_one_request.CreateOneRequest {
  body
}
class "CreateOneRequest" as app.inners.models.value_objects.contracts.requests.managements.files.create_one_request.CreateOneRequest {
  body
}
class "CreateOneRequest" as app.inners.models.value_objects.contracts.requests.managements.inventory_controls.create_one_request.CreateOneRequest {
  body
}
class "CreateOneRequest" as app.inners.models.value_objects.contracts.requests.managements.items.create_one_request.CreateOneRequest {
  body
}
class "CreateOneRequest" as app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.create_one_request.CreateOneRequest {
  body
}
class "CreateOneRequest" as app.inners.models.value_objects.contracts.requests.managements.item_file_maps.create_one_request.CreateOneRequest {
  body
}
class "CreateOneRequest" as app.inners.models.value_objects.contracts.requests.managements.locations.create_one_request.CreateOneRequest {
  body
}
class "CreateOneRequest" as app.inners.models.value_objects.contracts.requests.managements.roles.create_one_request.CreateOneRequest {
  body
}
class "CreateOneRequest" as app.inners.models.value_objects.contracts.requests.managements.transactions.create_one_request.CreateOneRequest {
  body
}
class "CreateOneRequest" as app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.create_one_request.CreateOneRequest {
  body
}
class "DataStoreUtility" as app.outers.utilities.datastore_utility.DataStoreUtility {
  engine : AsyncEngine
  create_session() -> AsyncSession
}
class "DatastoreSetting" as app.outers.settings.datastore_settings.DatastoreSetting {
  DS_DATABASE : str
  DS_DIALECT : str
  DS_HOST : str
  DS_PASSWORD : str
  DS_PORT : str
  DS_USER : str
  URL
  URL : Optional[str]
}
class "DeleteOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.accounts.delete_one_by_id_request.DeleteOneByIdRequest {
  id : UUID
}
class "DeleteOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.companies.delete_one_by_id_request.DeleteOneByIdRequest {
  id : UUID
}
class "DeleteOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.files.delete_one_by_id_request.DeleteOneByIdRequest {
  id : UUID
}
class "DeleteOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.inventory_controls.delete_one_by_id_request.DeleteOneByIdRequest {
  id : UUID
}
class "DeleteOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.items.delete_one_by_id_request.DeleteOneByIdRequest {
  id : UUID
}
class "DeleteOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.delete_one_by_id_request.DeleteOneByIdRequest {
  id : UUID
}
class "DeleteOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.item_file_maps.delete_one_by_id_request.DeleteOneByIdRequest {
  id : UUID
}
class "DeleteOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.locations.delete_one_by_id_request.DeleteOneByIdRequest {
  id : UUID
}
class "DeleteOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.roles.delete_one_by_id_request.DeleteOneByIdRequest {
  id : UUID
}
class "DeleteOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.transactions.delete_one_by_id_request.DeleteOneByIdRequest {
  id : UUID
}
class "DeleteOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.delete_one_by_id_request.DeleteOneByIdRequest {
  id : UUID
}
class "File" as app.inners.models.entities.file.File {
  content : bytes
  created_at : datetime
  description : str
  extension : str
  id : UUID
  name : str
  updated_at : datetime
}
class "FileController" as app.outers.interfaces.deliveries.controllers.file_controller.FileController {
  file_management
  create_one(body: CreateBody) -> Content[File]
  delete_one_by_id(id: UUID) -> Content[File]
  patch_one_by_id(id: UUID, body: PatchBody) -> Content[File]
  read_all(request: Request) -> Content[List[File]]
  read_one_by_id(id: UUID) -> Content[File]
}
class "FileManagement" as app.inners.use_cases.managements.file_management.FileManagement {
  file_repository
  management_utility
  create_one(request: CreateOneRequest) -> Content[File]
  delete_one_by_id(request: DeleteOneByIdRequest) -> Content[File]
  patch_one_by_id(request: PatchOneByIdRequest) -> Content[File]
  read_all(request: ReadAllRequest) -> Content[List[File]]
  read_one_by_id(request: ReadOneByIdRequest) -> Content[File]
}
class "FileRepository" as app.outers.repositories.file_repository.FileRepository {
  datastore_utility
  create_one(entity: File) -> File
  delete_one_by_id(id: UUID) -> File
  patch_one_by_id(id: UUID, entity: File) -> File
  read_all() -> List[File]
  read_all_by_account_id(account_id: UUID) -> List[File]
  read_all_by_item_id(item_id: UUID) -> List[File]
  read_one_by_id(id: UUID) -> File
}
class "ForecastController" as app.outers.interfaces.deliveries.controllers.forecast_controller.ForecastController {
  item_stock_forecast
  item_transaction_forecast
  item_stock(item_id: UUID, body: StockForecastBody) -> Content[ItemStockForecastResponse]
  item_transaction(item_id: UUID, body: TransactionForecastBody) -> Content[ItemTransactionForecastResponse]
}
class "InventoryControl" as app.inners.models.entities.inventory_control.InventoryControl {
  account_id : UUID
  created_at : datetime
  id : UUID
  item_id : UUID
  quantity_after : float
  quantity_before : float
  timestamp : datetime
  updated_at : datetime
}
class "InventoryControlController" as app.outers.interfaces.deliveries.controllers.inventory_control_controller.InventoryControlController {
  inventory_control_management
  create_one(body: CreateBody) -> Content[InventoryControl]
  delete_one_by_id(id: UUID) -> Content[InventoryControl]
  patch_one_by_id(id: UUID, body: PatchBody) -> Content[InventoryControl]
  read_all(request: Request) -> Content[List[InventoryControl]]
  read_one_by_id(id: UUID) -> Content[InventoryControl]
}
class "InventoryControlManagement" as app.inners.use_cases.managements.inventory_control_management.InventoryControlManagement {
  inventory_control_repository
  management_utility
  create_one(request: CreateOneRequest) -> Content[InventoryControl]
  delete_one_by_id(request: DeleteOneByIdRequest) -> Content[InventoryControl]
  patch_one_by_id(request: PatchOneByIdRequest) -> Content[InventoryControl]
  read_all(request: ReadAllRequest) -> Content[List[InventoryControl]]
  read_one_by_id(request: ReadOneByIdRequest) -> Content[InventoryControl]
}
class "InventoryControlRepository" as app.outers.repositories.inventory_control_repository.InventoryControlRepository {
  datastore_utility
  create_one(entity: InventoryControl) -> InventoryControl
  delete_one_by_id(id: UUID) -> InventoryControl
  patch_one_by_id(id: UUID, entity: InventoryControl) -> InventoryControl
  read_all() -> List[InventoryControl]
  read_all_by_item_id(item_id: UUID) -> List[InventoryControl]
  read_one_by_id(id: UUID) -> InventoryControl
}
class "Item" as app.inners.models.entities.item.Item {
  code : str
  created_at : datetime
  description : str
  id : UUID
  location_id : UUID
  name : str
  quantity : float
  type : str
  unit_cost_price : float
  unit_name : str
  unit_sell_price : float
  updated_at : datetime
}
class "ItemBundleMap" as app.inners.models.entities.item_bundle_map.ItemBundleMap {
  created_at : datetime
  id : UUID
  quantity : float
  sub_item_id : UUID
  super_item_id : UUID
  updated_at : datetime
}
class "ItemBundleMapController" as app.outers.interfaces.deliveries.controllers.item_bundle_map_controller.ItemBundleMapController {
  item_bundle_map_management
  create_one(body: CreateBody) -> Content[ItemBundleMap]
  delete_one_by_id(id: UUID) -> Content[ItemBundleMap]
  patch_one_by_id(id: UUID, body: PatchBody) -> Content[ItemBundleMap]
  read_all(request: Request) -> Content[List[ItemBundleMap]]
  read_one_by_id(id: UUID) -> Content[ItemBundleMap]
}
class "ItemBundleMapManagement" as app.inners.use_cases.managements.item_bundle_map_management.ItemBundleMapManagement {
  item_bundle_map_repository
  management_utility
  create_one(request: CreateOneRequest) -> Content[ItemBundleMap]
  delete_one_by_id(request: DeleteOneByIdRequest) -> Content[ItemBundleMap]
  patch_one_by_id(request: PatchOneByIdRequest) -> Content[ItemBundleMap]
  read_all(request: ReadAllRequest) -> Content[List[ItemBundleMap]]
  read_one_by_id(request: ReadOneByIdRequest) -> Content[ItemBundleMap]
}
class "ItemBundleMapRepository" as app.outers.repositories.item_bundle_map_repository.ItemBundleMapRepository {
  datastore_utility
  create_one(entity: ItemBundleMap) -> ItemBundleMap
  delete_one_by_id(id: UUID) -> ItemBundleMap
  patch_one_by_id(id: UUID, entity: ItemBundleMap) -> ItemBundleMap
  read_all() -> List[ItemBundleMap]
  read_one_by_id(id: UUID) -> ItemBundleMap
}
class "ItemController" as app.outers.interfaces.deliveries.controllers.item_controller.ItemController {
  item_management
  create_one(body: CreateBody) -> Content[Item]
  delete_one_by_id(id: UUID) -> Content[Item]
  patch_one_by_id(id: UUID, body: PatchBody) -> Content[Item]
  read_all(request: Request) -> Content[List[Item]]
  read_one_by_id(id: UUID) -> Content[Item]
}
class "ItemFileMap" as app.inners.models.entities.item_file_map.ItemFileMap {
  created_at : datetime
  file_id : UUID
  id : UUID
  item_id : UUID
  updated_at : datetime
}
class "ItemFileMapController" as app.outers.interfaces.deliveries.controllers.item_file_map_controller.ItemFileMapController {
  item_file_map_management
  create_one(body: CreateBody) -> Content[ItemFileMap]
  delete_one_by_id(id: UUID) -> Content[ItemFileMap]
  patch_one_by_id(id: UUID, body: PatchBody) -> Content[ItemFileMap]
  read_all(request: Request) -> Content[List[ItemFileMap]]
  read_one_by_id(id: UUID) -> Content[ItemFileMap]
}
class "ItemFileMapManagement" as app.inners.use_cases.managements.item_file_map_management.ItemFileMapManagement {
  item_file_map_repository
  management_utility
  create_one(request: CreateOneRequest) -> Content[ItemFileMap]
  delete_one_by_id(request: DeleteOneByIdRequest) -> Content[ItemFileMap]
  patch_one_by_id(request: PatchOneByIdRequest) -> Content[ItemFileMap]
  read_all(request: ReadAllRequest) -> Content[List[ItemFileMap]]
  read_one_by_id(request: ReadOneByIdRequest) -> Content[ItemFileMap]
}
class "ItemFileMapRepository" as app.outers.repositories.item_file_map_repository.ItemFileMapRepository {
  datastore_utility
  create_one(entity: ItemFileMap) -> ItemFileMap
  delete_one_by_id(id: UUID) -> ItemFileMap
  patch_one_by_id(id: UUID, entity: ItemFileMap) -> ItemFileMap
  read_all() -> List[ItemFileMap]
  read_one_by_id(id: UUID) -> ItemFileMap
}
class "ItemManagement" as app.inners.use_cases.managements.item_management.ItemManagement {
  item_repository
  management_utility
  create_one(request: CreateOneRequest) -> Content[Item]
  delete_one_by_id(request: DeleteOneByIdRequest) -> Content[Item]
  patch_one_by_id(request: PatchOneByIdRequest) -> Content[Item]
  read_all(request: ReadAllRequest) -> Content[List[Item]]
  read_one_by_id(request: ReadOneByIdRequest) -> Content[Item]
}
class "ItemRepository" as app.outers.repositories.item_repository.ItemRepository {
  datastore_utility
  create_one(entity: Item) -> Item
  delete_one_by_id(id: UUID) -> Item
  patch_one_by_id(id: UUID, entity: Item) -> Item
  read_all() -> List[Item]
  read_all_by_account_id(account_id: UUID) -> List[Item]
  read_all_by_location_id(location_id: UUID) -> List[Item]
  read_one_by_id(id: UUID) -> Item
}
class "ItemStockForecast" as app.inners.use_cases.forecasts.item_stock_forecast.ItemStockForecast {
  inventory_control_repository
  forecast(request: StockForecastByItemIdRequest) -> Content[ItemStockForecastResponse]
}
class "ItemStockForecastResponse" as app.inners.models.value_objects.contracts.responses.forecast.item_stock_forecast_response.ItemStockForecastResponse {
  metric
  prediction
}
class "ItemTransactionForecast" as app.inners.use_cases.forecasts.item_transaction_forecast.ItemTransactionForecast {
  transaction_item_map_repository
  forecast(request: TransactionForecastByItemIdRequest) -> Content[ItemTransactionForecastResponse]
}
class "ItemTransactionForecastResponse" as app.inners.models.value_objects.contracts.responses.forecast.item_transaction_forecast_response.ItemTransactionForecastResponse {
  metric
  prediction
}
class "Location" as app.inners.models.entities.location.Location {
  address : str
  company_id : UUID
  created_at : datetime
  description : str
  id : UUID
  name : str
  updated_at : datetime
}
class "LocationController" as app.outers.interfaces.deliveries.controllers.location_controller.LocationController {
  location_management
  create_one(body: CreateBody) -> Content[Location]
  delete_one_by_id(id: UUID) -> Content[Location]
  patch_one_by_id(id: UUID, body: PatchBody) -> Content[Location]
  read_all(request: Request) -> Content[List[Location]]
  read_one_by_id(id: UUID) -> Content[Location]
}
class "LocationManagement" as app.inners.use_cases.managements.location_management.LocationManagement {
  location_repository
  management_utility
  create_one(request: CreateOneRequest) -> Content[Location]
  delete_one_by_id(request: DeleteOneByIdRequest) -> Content[Location]
  patch_one_by_id(request: PatchOneByIdRequest) -> Content[Location]
  read_all(request: ReadAllRequest) -> Content[List[Location]]
  read_one_by_id(request: ReadOneByIdRequest) -> Content[Location]
}
class "LocationRegister" as app.inners.models.value_objects.contracts.requests.authentications.registers.location_register.LocationRegister {
  address : str
  description : str
  name : str
}
class "LocationRepository" as app.outers.repositories.location_repository.LocationRepository {
  datastore_utility
  create_one(entity: Location) -> Location
  delete_one_by_id(id: UUID) -> Location
  patch_one_by_id(id: UUID, entity: Location) -> Location
  read_all() -> List[Location]
  read_all_by_account_id(account_id: UUID) -> List[Location]
  read_all_by_company_id(company_id: UUID) -> List[Location]
  read_all_by_item_id(item_id: UUID) -> List[Location]
  read_one_by_id(id: UUID) -> Location
}
class "LoginAuthentication" as app.inners.use_cases.authentications.login_authentication.LoginAuthentication {
  account_management
  login_by_email_and_password(request: LoginByEmailAndPasswordRequest) -> Content[LoginResponse]
}
class "LoginByEmailAndPasswordBody" as app.inners.models.value_objects.contracts.requests.authentications.logins.login_by_email_and_password_body.LoginByEmailAndPasswordBody {
  email : str
  password : str
}
class "LoginByEmailAndPasswordRequest" as app.inners.models.value_objects.contracts.requests.authentications.logins.login_by_email_and_password_request.LoginByEmailAndPasswordRequest {
  email : str
  password : str
}
class "LoginResponse" as app.inners.models.value_objects.contracts.responses.authentications.logins.login_response.LoginResponse {
  entity
}
class "ManagementUtility" as app.outers.utilities.management_utility.ManagementUtility {
  filter(query_parameter: Dict[str, str], entity: BaseEntity) -> bool
}
class "MetricForecast" as app.inners.models.value_objects.forecasts.metric_forecast.MetricForecast {
  mae : float
  smape : float
}
class "PatchBody" as app.inners.models.value_objects.contracts.requests.managements.accounts.patch_body.PatchBody {
  email : str
  location_id : UUID
  name : str
  password : str
  role_id : UUID
}
class "PatchBody" as app.inners.models.value_objects.contracts.requests.managements.companies.patch_body.PatchBody {
  address : str
  description : str
  name : str
}
class "PatchBody" as app.inners.models.value_objects.contracts.requests.managements.files.patch_body.PatchBody {
  content : bytes
  description : str
  extension : str
  name : str
}
class "PatchBody" as app.inners.models.value_objects.contracts.requests.managements.inventory_controls.patch_body.PatchBody {
  account_id : UUID
  item_id : UUID
  quantity_after : float
  quantity_before : float
  timestamp : datetime
}
class "PatchBody" as app.inners.models.value_objects.contracts.requests.managements.items.patch_body.PatchBody {
  code : str
  description : str
  location_id : UUID
  name : str
  quantity : float
  type : str
  unit_cost_price : float
  unit_name : str
  unit_sell_price : float
}
class "PatchBody" as app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.patch_body.PatchBody {
  quantity : float
  sub_item_id : UUID
  super_item_id : UUID
}
class "PatchBody" as app.inners.models.value_objects.contracts.requests.managements.item_file_maps.patch_body.PatchBody {
  file_id : UUID
  item_id : UUID
}
class "PatchBody" as app.inners.models.value_objects.contracts.requests.managements.locations.patch_body.PatchBody {
  address : str
  company_id : UUID
  description : str
  name : str
}
class "PatchBody" as app.inners.models.value_objects.contracts.requests.managements.roles.patch_body.PatchBody {
  description : str
  name : str
}
class "PatchBody" as app.inners.models.value_objects.contracts.requests.managements.transactions.patch_body.PatchBody {
  account_id : UUID
  sell_price : float
  timestamp : datetime
}
class "PatchBody" as app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.patch_body.PatchBody {
  item_id : UUID
  quantity : float
  sell_price : float
  transaction_id : UUID
}
class "PatchOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.accounts.patch_one_by_id_request.PatchOneByIdRequest {
  body
  id : UUID
}
class "PatchOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.companies.patch_one_by_id_request.PatchOneByIdRequest {
  body
  id : UUID
}
class "PatchOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.files.patch_one_by_id_request.PatchOneByIdRequest {
  body
  id : UUID
}
class "PatchOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.inventory_controls.patch_one_by_id_request.PatchOneByIdRequest {
  body
  id : UUID
}
class "PatchOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.items.patch_one_by_id_request.PatchOneByIdRequest {
  body
  id : UUID
}
class "PatchOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.patch_one_by_id_request.PatchOneByIdRequest {
  body
  id : UUID
}
class "PatchOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.item_file_maps.patch_one_by_id_request.PatchOneByIdRequest {
  body
  id : UUID
}
class "PatchOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.locations.patch_one_by_id_request.PatchOneByIdRequest {
  body
  id : UUID
}
class "PatchOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.roles.patch_one_by_id_request.PatchOneByIdRequest {
  body
  id : UUID
}
class "PatchOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.transactions.patch_one_by_id_request.PatchOneByIdRequest {
  body
  id : UUID
}
class "PatchOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.patch_one_by_id_request.PatchOneByIdRequest {
  body
  id : UUID
}
class "PredictionForecast" as app.inners.models.value_objects.forecasts.prediction_forecast.PredictionForecast {
  future : list
  past : list
}
class "ReadAllByCompanyIdRequest" as app.inners.models.value_objects.contracts.requests.managements.accounts.read_all_by_company_id_request.ReadAllByCompanyIdRequest {
  company_id : UUID
}
class "ReadAllRequest" as app.inners.models.value_objects.contracts.requests.managements.accounts.read_all_request.ReadAllRequest {
  query_parameter : Dict[str, str]
}
class "ReadAllRequest" as app.inners.models.value_objects.contracts.requests.managements.companies.read_all_request.ReadAllRequest {
  query_parameter : Dict[str, str]
}
class "ReadAllRequest" as app.inners.models.value_objects.contracts.requests.managements.files.read_all_request.ReadAllRequest {
  query_parameter : Dict[str, str]
}
class "ReadAllRequest" as app.inners.models.value_objects.contracts.requests.managements.inventory_controls.read_all_request.ReadAllRequest {
  query_parameter : Dict[str, str]
}
class "ReadAllRequest" as app.inners.models.value_objects.contracts.requests.managements.items.read_all_request.ReadAllRequest {
  query_parameter : Dict[str, str]
}
class "ReadAllRequest" as app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.read_all_request.ReadAllRequest {
  query_parameter : Dict[str, str]
}
class "ReadAllRequest" as app.inners.models.value_objects.contracts.requests.managements.item_file_maps.read_all_request.ReadAllRequest {
  query_parameter : Dict[str, str]
}
class "ReadAllRequest" as app.inners.models.value_objects.contracts.requests.managements.locations.read_all_request.ReadAllRequest {
  query_parameter : Dict[str, str]
}
class "ReadAllRequest" as app.inners.models.value_objects.contracts.requests.managements.roles.read_all_request.ReadAllRequest {
  query_parameter : Dict[str, str]
}
class "ReadAllRequest" as app.inners.models.value_objects.contracts.requests.managements.transactions.read_all_request.ReadAllRequest {
  query_parameter : Dict[str, str]
}
class "ReadAllRequest" as app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.read_all_request.ReadAllRequest {
  query_parameter : Dict[str, str]
}
class "ReadOneByAccountIdRequest" as app.inners.models.value_objects.contracts.requests.managements.companies.read_one_by_account_id_request.ReadOneByAccountIdRequest {
  account_id : UUID
}
class "ReadOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.accounts.read_one_by_id_request.ReadOneByIdRequest {
  id : UUID
}
class "ReadOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.companies.read_one_by_id_request.ReadOneByIdRequest {
  id : UUID
}
class "ReadOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.files.read_one_by_id_request.ReadOneByIdRequest {
  id : UUID
}
class "ReadOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.inventory_controls.read_one_by_id_request.ReadOneByIdRequest {
  id : UUID
}
class "ReadOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.items.read_one_by_id_request.ReadOneByIdRequest {
  id : UUID
}
class "ReadOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.read_one_by_id_request.ReadOneByIdRequest {
  id : UUID
}
class "ReadOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.item_file_maps.read_one_by_id_request.ReadOneByIdRequest {
  id : UUID
}
class "ReadOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.locations.read_one_by_id_request.ReadOneByIdRequest {
  id : UUID
}
class "ReadOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.roles.read_one_by_id_request.ReadOneByIdRequest {
  id : UUID
}
class "ReadOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.transactions.read_one_by_id_request.ReadOneByIdRequest {
  id : UUID
}
class "ReadOneByIdRequest" as app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.read_one_by_id_request.ReadOneByIdRequest {
  id : UUID
}
class "RegisterAuthentication" as app.inners.use_cases.authentications.register_authentication.RegisterAuthentication {
  account_management
  company_management
  location_management
  role_management
  register_by_email_and_password(request: RegisterByEmailAndPasswordRequest) -> Content[RegisterResponse]
}
class "RegisterByEmailAndPasswordBody" as app.inners.models.value_objects.contracts.requests.authentications.registers.register_by_email_and_password_body.RegisterByEmailAndPasswordBody {
  account
  company
  location
}
class "RegisterByEmailAndPasswordRequest" as app.inners.models.value_objects.contracts.requests.authentications.registers.register_by_email_and_password_request.RegisterByEmailAndPasswordRequest {
  account
  company
  location
}
class "RegisterResponse" as app.inners.models.value_objects.contracts.responses.authentications.registers.register_response.RegisterResponse {
  entity
}
class "Role" as app.inners.models.entities.role.Role {
  created_at : datetime
  description : str
  id : UUID
  name : str
  updated_at : datetime
}
class "RoleController" as app.outers.interfaces.deliveries.controllers.role_controller.RoleController {
  role_management
  create_one(body: CreateBody) -> Content[Role]
  delete_one_by_id(id: UUID) -> Content[Role]
  patch_one_by_id(id: UUID, body: PatchBody) -> Content[Role]
  read_all(request: Request) -> Content[List[Role]]
  read_one_by_id(id: UUID) -> Content[Role]
}
class "RoleManagement" as app.inners.use_cases.managements.role_management.RoleManagement {
  management_utility
  role_repository
  create_one(request: CreateOneRequest) -> Content[Role]
  delete_one_by_id(request: DeleteOneByIdRequest) -> Content[Role]
  patch_one_by_id(request: PatchOneByIdRequest) -> Content[Role]
  read_all(request: ReadAllRequest) -> Content[List[Role]]
  read_one_by_id(request: ReadOneByIdRequest) -> Content[Role]
}
class "RoleRepository" as app.outers.repositories.role_repository.RoleRepository {
  datastore_utility
  create_one(entity: Role) -> Role
  delete_one_by_id(id: UUID) -> Role
  patch_one_by_id(id: UUID, entity: Role) -> Role
  read_all() -> List[Role]
  read_all_by_account_id(account_id: UUID) -> List[Role]
  read_one_by_id(id: UUID) -> Role
}
class "StockForecastBody" as app.inners.models.value_objects.contracts.requests.forecasts.item_stocks.stock_forecast_body.StockForecastBody {
  horizon : int
  resample : str
  test_size : float
}
class "StockForecastByItemIdRequest" as app.inners.models.value_objects.contracts.requests.forecasts.item_stocks.stock_forecast_by_item_id_request.StockForecastByItemIdRequest {
  horizon : int
  item_id : UUID
  resample : str
  test_size : float
}
class "Transaction" as app.inners.models.entities.transaction.Transaction {
  account_id : UUID
  created_at : datetime
  id : UUID
  sell_price : float
  timestamp : datetime
  updated_at : datetime
}
class "TransactionController" as app.outers.interfaces.deliveries.controllers.transaction_controller.TransactionController {
  transaction_management
  create_one(body: CreateBody) -> Content[Transaction]
  delete_one_by_id(id: UUID) -> Content[Transaction]
  patch_one_by_id(id: UUID, body: PatchBody) -> Content[Transaction]
  read_all(request: Request) -> Content[List[Transaction]]
  read_one_by_id(id: UUID) -> Content[Transaction]
}
class "TransactionForecastBody" as app.inners.models.value_objects.contracts.requests.forecasts.item_transactions.transaction_forecast_body.TransactionForecastBody {
  horizon : int
  resample : str
  test_size : float
}
class "TransactionForecastByItemIdRequest" as app.inners.models.value_objects.contracts.requests.forecasts.item_transactions.transaction_forecast_by_item_id_request.TransactionForecastByItemIdRequest {
  horizon : int
  item_id : UUID
  resample : str
  test_size : float
}
class "TransactionItemMap" as app.inners.models.entities.transaction_item_map.TransactionItemMap {
  created_at : datetime
  id : UUID
  item_id : UUID
  quantity : float
  sell_price : float
  transaction_id : UUID
  updated_at : datetime
}
class "TransactionItemMapController" as app.outers.interfaces.deliveries.controllers.transaction_item_map_controller.TransactionItemMapController {
  transaction_item_map_management
  create_one(body: CreateBody) -> Content[TransactionItemMap]
  delete_one_by_id(id: UUID) -> Content[TransactionItemMap]
  patch_one_by_id(id: UUID, body: PatchBody) -> Content[TransactionItemMap]
  read_all(request: Request) -> Content[List[TransactionItemMap]]
  read_one_by_id(id: UUID) -> Content[TransactionItemMap]
}
class "TransactionItemMapForecast" as app.inners.models.value_objects.forecasts.transaction_item_map_forecast.TransactionItemMapForecast {
  item_id : UUID
  quantity : float
  timestamp : datetime
  transaction_id : UUID
}
class "TransactionItemMapManagement" as app.inners.use_cases.managements.transaction_item_map_management.TransactionItemMapManagement {
  management_utility
  transaction_item_map_repository
  create_one(request: CreateOneRequest) -> Content[TransactionItemMap]
  delete_one_by_id(request: DeleteOneByIdRequest) -> Content[TransactionItemMap]
  patch_one_by_id(request: PatchOneByIdRequest) -> Content[TransactionItemMap]
  read_all(request: ReadAllRequest) -> Content[List[TransactionItemMap]]
  read_one_by_id(request: ReadOneByIdRequest) -> Content[TransactionItemMap]
}
class "TransactionItemMapRepository" as app.outers.repositories.transaction_item_map_repository.TransactionItemMapRepository {
  datastore_utility
  create_one(entity: TransactionItemMap) -> TransactionItemMap
  delete_one_by_id(id: UUID) -> TransactionItemMap
  patch_one_by_id(id: UUID, entity: TransactionItemMap) -> TransactionItemMap
  read_all() -> List[TransactionItemMap]
  read_all_by_account_id(account_id: UUID) -> List[TransactionItemMap]
  read_all_by_item_id(item_id: UUID) -> List[TransactionItemMapForecast]
  read_one_by_id(id: UUID) -> TransactionItemMap
}
class "TransactionManagement" as app.inners.use_cases.managements.transaction_management.TransactionManagement {
  management_utility
  transaction_repository
  create_one(request: CreateOneRequest) -> Content[Transaction]
  delete_one_by_id(request: DeleteOneByIdRequest) -> Content[Transaction]
  patch_one_by_id(request: PatchOneByIdRequest) -> Content[Transaction]
  read_all(request: ReadAllRequest) -> Content[List[Transaction]]
  read_one_by_id(request: ReadOneByIdRequest) -> Content[Transaction]
}
class "TransactionRepository" as app.outers.repositories.transaction_repository.TransactionRepository {
  datastore_utility
  create_one(entity: Transaction) -> Transaction
  delete_one_by_id(id: UUID) -> Transaction
  patch_one_by_id(id: UUID, entity: Transaction) -> Transaction
  read_all() -> List[Transaction]
  read_all_by_location_id(location_id)
  read_one_by_id(id: UUID) -> Transaction
}
app.inners.models.entities.account.Account --|> app.inners.models.entities.base_entity.BaseEntity
app.inners.models.entities.company.Company --|> app.inners.models.entities.base_entity.BaseEntity
app.inners.models.entities.file.File --|> app.inners.models.entities.base_entity.BaseEntity
app.inners.models.entities.inventory_control.InventoryControl --|> app.inners.models.entities.base_entity.BaseEntity
app.inners.models.entities.item.Item --|> app.inners.models.entities.base_entity.BaseEntity
app.inners.models.entities.item_bundle_map.ItemBundleMap --|> app.inners.models.entities.base_entity.BaseEntity
app.inners.models.entities.item_file_map.ItemFileMap --|> app.inners.models.entities.base_entity.BaseEntity
app.inners.models.entities.location.Location --|> app.inners.models.entities.base_entity.BaseEntity
app.inners.models.entities.role.Role --|> app.inners.models.entities.base_entity.BaseEntity
app.inners.models.entities.transaction.Transaction --|> app.inners.models.entities.base_entity.BaseEntity
app.inners.models.entities.transaction_item_map.TransactionItemMap --|> app.inners.models.entities.base_entity.BaseEntity
app.inners.models.value_objects.contracts.requests.authentications.logins.login_by_email_and_password_body.LoginByEmailAndPasswordBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.authentications.logins.login_by_email_and_password_request.LoginByEmailAndPasswordRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.authentications.registers.account_register.AccountRegister --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.authentications.registers.company_register.CompanyRegister --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.authentications.registers.location_register.LocationRegister --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.authentications.registers.register_by_email_and_password_body.RegisterByEmailAndPasswordBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.authentications.registers.register_by_email_and_password_request.RegisterByEmailAndPasswordRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.forecasts.item_stocks.stock_forecast_body.StockForecastBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.forecasts.item_stocks.stock_forecast_by_item_id_request.StockForecastByItemIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.forecasts.item_transactions.transaction_forecast_body.TransactionForecastBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.forecasts.item_transactions.transaction_forecast_by_item_id_request.TransactionForecastByItemIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.accounts.create_body.CreateBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.accounts.create_one_request.CreateOneRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.accounts.delete_one_by_id_request.DeleteOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.accounts.patch_body.PatchBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.accounts.patch_one_by_id_request.PatchOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.accounts.read_all_by_company_id_request.ReadAllByCompanyIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.accounts.read_all_request.ReadAllRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.accounts.read_one_by_id_request.ReadOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.companies.create_body.CreateBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.companies.create_one_request.CreateOneRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.companies.delete_one_by_id_request.DeleteOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.companies.patch_body.PatchBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.companies.patch_one_by_id_request.PatchOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.companies.read_all_request.ReadAllRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.companies.read_one_by_account_id_request.ReadOneByAccountIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.companies.read_one_by_id_request.ReadOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.files.create_body.CreateBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.files.create_one_request.CreateOneRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.files.delete_one_by_id_request.DeleteOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.files.patch_body.PatchBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.files.patch_one_by_id_request.PatchOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.files.read_all_request.ReadAllRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.files.read_one_by_id_request.ReadOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.inventory_controls.create_body.CreateBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.inventory_controls.create_one_request.CreateOneRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.inventory_controls.delete_one_by_id_request.DeleteOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.inventory_controls.patch_body.PatchBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.inventory_controls.patch_one_by_id_request.PatchOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.inventory_controls.read_all_request.ReadAllRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.inventory_controls.read_one_by_id_request.ReadOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.create_body.CreateBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.create_one_request.CreateOneRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.delete_one_by_id_request.DeleteOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.patch_body.PatchBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.patch_one_by_id_request.PatchOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.read_all_request.ReadAllRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.read_one_by_id_request.ReadOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.item_file_maps.create_body.CreateBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.item_file_maps.create_one_request.CreateOneRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.item_file_maps.delete_one_by_id_request.DeleteOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.item_file_maps.patch_body.PatchBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.item_file_maps.patch_one_by_id_request.PatchOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.item_file_maps.read_all_request.ReadAllRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.item_file_maps.read_one_by_id_request.ReadOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.items.create_body.CreateBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.items.create_one_request.CreateOneRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.items.delete_one_by_id_request.DeleteOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.items.patch_body.PatchBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.items.patch_one_by_id_request.PatchOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.items.read_all_request.ReadAllRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.items.read_one_by_id_request.ReadOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.locations.create_body.CreateBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.locations.create_one_request.CreateOneRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.locations.delete_one_by_id_request.DeleteOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.locations.patch_body.PatchBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.locations.patch_one_by_id_request.PatchOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.locations.read_all_request.ReadAllRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.locations.read_one_by_id_request.ReadOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.roles.create_body.CreateBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.roles.create_one_request.CreateOneRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.roles.delete_one_by_id_request.DeleteOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.roles.patch_body.PatchBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.roles.patch_one_by_id_request.PatchOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.roles.read_all_request.ReadAllRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.roles.read_one_by_id_request.ReadOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.create_body.CreateBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.create_one_request.CreateOneRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.delete_one_by_id_request.DeleteOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.patch_body.PatchBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.patch_one_by_id_request.PatchOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.read_all_request.ReadAllRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.read_one_by_id_request.ReadOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.transactions.create_body.CreateBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.transactions.create_one_request.CreateOneRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.transactions.delete_one_by_id_request.DeleteOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.transactions.patch_body.PatchBody --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.transactions.patch_one_by_id_request.PatchOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.transactions.read_all_request.ReadAllRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.requests.managements.transactions.read_one_by_id_request.ReadOneByIdRequest --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.responses.authentications.logins.login_response.LoginResponse --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.responses.authentications.registers.register_response.RegisterResponse --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.responses.content.Content --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.responses.forecast.item_stock_forecast_response.ItemStockForecastResponse --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.contracts.responses.forecast.item_transaction_forecast_response.ItemTransactionForecastResponse --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.forecasts.metric_forecast.MetricForecast --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.forecasts.prediction_forecast.PredictionForecast --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.value_objects.forecasts.transaction_item_map_forecast.TransactionItemMapForecast --|> app.inners.models.value_objects.base_value_object.BaseValueObject
app.inners.models.entities.account.Account --* app.inners.models.value_objects.contracts.responses.authentications.logins.login_response.LoginResponse : entity
app.inners.models.entities.account.Account --* app.inners.models.value_objects.contracts.responses.authentications.registers.register_response.RegisterResponse : entity
app.inners.models.value_objects.contracts.requests.authentications.registers.account_register.AccountRegister --* app.inners.models.value_objects.contracts.requests.authentications.registers.register_by_email_and_password_body.RegisterByEmailAndPasswordBody : account
app.inners.models.value_objects.contracts.requests.authentications.registers.account_register.AccountRegister --* app.inners.models.value_objects.contracts.requests.authentications.registers.register_by_email_and_password_request.RegisterByEmailAndPasswordRequest : account
app.inners.models.value_objects.contracts.requests.authentications.registers.company_register.CompanyRegister --* app.inners.models.value_objects.contracts.requests.authentications.registers.register_by_email_and_password_body.RegisterByEmailAndPasswordBody : company
app.inners.models.value_objects.contracts.requests.authentications.registers.company_register.CompanyRegister --* app.inners.models.value_objects.contracts.requests.authentications.registers.register_by_email_and_password_request.RegisterByEmailAndPasswordRequest : company
app.inners.models.value_objects.contracts.requests.authentications.registers.location_register.LocationRegister --* app.inners.models.value_objects.contracts.requests.authentications.registers.register_by_email_and_password_body.RegisterByEmailAndPasswordBody : location
app.inners.models.value_objects.contracts.requests.authentications.registers.location_register.LocationRegister --* app.inners.models.value_objects.contracts.requests.authentications.registers.register_by_email_and_password_request.RegisterByEmailAndPasswordRequest : location
app.inners.models.value_objects.contracts.requests.managements.accounts.create_body.CreateBody --* app.inners.models.value_objects.contracts.requests.managements.accounts.create_one_request.CreateOneRequest : body
app.inners.models.value_objects.contracts.requests.managements.accounts.patch_body.PatchBody --* app.inners.models.value_objects.contracts.requests.managements.accounts.patch_one_by_id_request.PatchOneByIdRequest : body
app.inners.models.value_objects.contracts.requests.managements.companies.create_body.CreateBody --* app.inners.models.value_objects.contracts.requests.managements.companies.create_one_request.CreateOneRequest : body
app.inners.models.value_objects.contracts.requests.managements.companies.patch_body.PatchBody --* app.inners.models.value_objects.contracts.requests.managements.companies.patch_one_by_id_request.PatchOneByIdRequest : body
app.inners.models.value_objects.contracts.requests.managements.files.create_body.CreateBody --* app.inners.models.value_objects.contracts.requests.managements.files.create_one_request.CreateOneRequest : body
app.inners.models.value_objects.contracts.requests.managements.files.patch_body.PatchBody --* app.inners.models.value_objects.contracts.requests.managements.files.patch_one_by_id_request.PatchOneByIdRequest : body
app.inners.models.value_objects.contracts.requests.managements.inventory_controls.create_body.CreateBody --* app.inners.models.value_objects.contracts.requests.managements.inventory_controls.create_one_request.CreateOneRequest : body
app.inners.models.value_objects.contracts.requests.managements.inventory_controls.patch_body.PatchBody --* app.inners.models.value_objects.contracts.requests.managements.inventory_controls.patch_one_by_id_request.PatchOneByIdRequest : body
app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.create_body.CreateBody --* app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.create_one_request.CreateOneRequest : body
app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.patch_body.PatchBody --* app.inners.models.value_objects.contracts.requests.managements.item_bundle_maps.patch_one_by_id_request.PatchOneByIdRequest : body
app.inners.models.value_objects.contracts.requests.managements.item_file_maps.create_body.CreateBody --* app.inners.models.value_objects.contracts.requests.managements.item_file_maps.create_one_request.CreateOneRequest : body
app.inners.models.value_objects.contracts.requests.managements.item_file_maps.patch_body.PatchBody --* app.inners.models.value_objects.contracts.requests.managements.item_file_maps.patch_one_by_id_request.PatchOneByIdRequest : body
app.inners.models.value_objects.contracts.requests.managements.items.create_body.CreateBody --* app.inners.models.value_objects.contracts.requests.managements.items.create_one_request.CreateOneRequest : body
app.inners.models.value_objects.contracts.requests.managements.items.patch_body.PatchBody --* app.inners.models.value_objects.contracts.requests.managements.items.patch_one_by_id_request.PatchOneByIdRequest : body
app.inners.models.value_objects.contracts.requests.managements.locations.create_body.CreateBody --* app.inners.models.value_objects.contracts.requests.managements.locations.create_one_request.CreateOneRequest : body
app.inners.models.value_objects.contracts.requests.managements.locations.patch_body.PatchBody --* app.inners.models.value_objects.contracts.requests.managements.locations.patch_one_by_id_request.PatchOneByIdRequest : body
app.inners.models.value_objects.contracts.requests.managements.roles.create_body.CreateBody --* app.inners.models.value_objects.contracts.requests.managements.roles.create_one_request.CreateOneRequest : body
app.inners.models.value_objects.contracts.requests.managements.roles.patch_body.PatchBody --* app.inners.models.value_objects.contracts.requests.managements.roles.patch_one_by_id_request.PatchOneByIdRequest : body
app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.create_body.CreateBody --* app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.create_one_request.CreateOneRequest : body
app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.patch_body.PatchBody --* app.inners.models.value_objects.contracts.requests.managements.transaction_item_maps.patch_one_by_id_request.PatchOneByIdRequest : body
app.inners.models.value_objects.contracts.requests.managements.transactions.create_body.CreateBody --* app.inners.models.value_objects.contracts.requests.managements.transactions.create_one_request.CreateOneRequest : body
app.inners.models.value_objects.contracts.requests.managements.transactions.patch_body.PatchBody --* app.inners.models.value_objects.contracts.requests.managements.transactions.patch_one_by_id_request.PatchOneByIdRequest : body
app.inners.models.value_objects.forecasts.metric_forecast.MetricForecast --* app.inners.models.value_objects.contracts.responses.forecast.item_stock_forecast_response.ItemStockForecastResponse : metric
app.inners.models.value_objects.forecasts.metric_forecast.MetricForecast --* app.inners.models.value_objects.contracts.responses.forecast.item_transaction_forecast_response.ItemTransactionForecastResponse : metric
app.inners.models.value_objects.forecasts.prediction_forecast.PredictionForecast --* app.inners.models.value_objects.contracts.responses.forecast.item_stock_forecast_response.ItemStockForecastResponse : prediction
app.inners.models.value_objects.forecasts.prediction_forecast.PredictionForecast --* app.inners.models.value_objects.contracts.responses.forecast.item_transaction_forecast_response.ItemTransactionForecastResponse : prediction
app.inners.use_cases.authentications.login_authentication.LoginAuthentication --* app.outers.interfaces.deliveries.controllers.authentication_controller.AuthenticationController : login_authentication
app.inners.use_cases.authentications.register_authentication.RegisterAuthentication --* app.outers.interfaces.deliveries.controllers.authentication_controller.AuthenticationController : register_authentication
app.inners.use_cases.forecasts.item_stock_forecast.ItemStockForecast --* app.outers.interfaces.deliveries.controllers.forecast_controller.ForecastController : item_stock_forecast
app.inners.use_cases.forecasts.item_transaction_forecast.ItemTransactionForecast --* app.outers.interfaces.deliveries.controllers.forecast_controller.ForecastController : item_transaction_forecast
app.inners.use_cases.managements.account_management.AccountManagement --* app.inners.use_cases.authentications.login_authentication.LoginAuthentication : account_management
app.inners.use_cases.managements.account_management.AccountManagement --* app.inners.use_cases.authentications.register_authentication.RegisterAuthentication : account_management
app.inners.use_cases.managements.account_management.AccountManagement --* app.outers.interfaces.deliveries.controllers.account_controller.AccountController : account_management
app.inners.use_cases.managements.company_management.CompanyManagement --* app.inners.use_cases.authentications.register_authentication.RegisterAuthentication : company_management
app.inners.use_cases.managements.company_management.CompanyManagement --* app.outers.interfaces.deliveries.controllers.company_controller.CompanyController : company_management
app.inners.use_cases.managements.file_management.FileManagement --* app.outers.interfaces.deliveries.controllers.file_controller.FileController : file_management
app.inners.use_cases.managements.inventory_control_management.InventoryControlManagement --* app.outers.interfaces.deliveries.controllers.inventory_control_controller.InventoryControlController : inventory_control_management
app.inners.use_cases.managements.item_bundle_map_management.ItemBundleMapManagement --* app.outers.interfaces.deliveries.controllers.item_bundle_map_controller.ItemBundleMapController : item_bundle_map_management
app.inners.use_cases.managements.item_file_map_management.ItemFileMapManagement --* app.outers.interfaces.deliveries.controllers.item_file_map_controller.ItemFileMapController : item_file_map_management
app.inners.use_cases.managements.item_management.ItemManagement --* app.outers.interfaces.deliveries.controllers.item_controller.ItemController : item_management
app.inners.use_cases.managements.location_management.LocationManagement --* app.inners.use_cases.authentications.register_authentication.RegisterAuthentication : location_management
app.inners.use_cases.managements.location_management.LocationManagement --* app.outers.interfaces.deliveries.controllers.location_controller.LocationController : location_management
app.inners.use_cases.managements.role_management.RoleManagement --* app.inners.use_cases.authentications.register_authentication.RegisterAuthentication : role_management
app.inners.use_cases.managements.role_management.RoleManagement --* app.outers.interfaces.deliveries.controllers.role_controller.RoleController : role_management
app.inners.use_cases.managements.transaction_item_map_management.TransactionItemMapManagement --* app.outers.interfaces.deliveries.controllers.transaction_item_map_controller.TransactionItemMapController : transaction_item_map_management
app.inners.use_cases.managements.transaction_management.TransactionManagement --* app.outers.interfaces.deliveries.controllers.transaction_controller.TransactionController : transaction_management
app.outers.repositories.account_repository.AccountRepository --* app.inners.use_cases.managements.account_management.AccountManagement : account_repository
app.outers.repositories.company_repository.CompanyRepository --* app.inners.use_cases.managements.company_management.CompanyManagement : company_repository
app.outers.repositories.file_repository.FileRepository --* app.inners.use_cases.managements.file_management.FileManagement : file_repository
app.outers.repositories.inventory_control_repository.InventoryControlRepository --* app.inners.use_cases.forecasts.item_stock_forecast.ItemStockForecast : inventory_control_repository
app.outers.repositories.inventory_control_repository.InventoryControlRepository --* app.inners.use_cases.managements.inventory_control_management.InventoryControlManagement : inventory_control_repository
app.outers.repositories.item_bundle_map_repository.ItemBundleMapRepository --* app.inners.use_cases.managements.item_bundle_map_management.ItemBundleMapManagement : item_bundle_map_repository
app.outers.repositories.item_file_map_repository.ItemFileMapRepository --* app.inners.use_cases.managements.item_file_map_management.ItemFileMapManagement : item_file_map_repository
app.outers.repositories.item_repository.ItemRepository --* app.inners.use_cases.managements.item_management.ItemManagement : item_repository
app.outers.repositories.location_repository.LocationRepository --* app.inners.use_cases.managements.location_management.LocationManagement : location_repository
app.outers.repositories.role_repository.RoleRepository --* app.inners.use_cases.managements.role_management.RoleManagement : role_repository
app.outers.repositories.transaction_item_map_repository.TransactionItemMapRepository --* app.inners.use_cases.forecasts.item_transaction_forecast.ItemTransactionForecast : transaction_item_map_repository
app.outers.repositories.transaction_item_map_repository.TransactionItemMapRepository --* app.inners.use_cases.managements.transaction_item_map_management.TransactionItemMapManagement : transaction_item_map_repository
app.outers.repositories.transaction_repository.TransactionRepository --* app.inners.use_cases.managements.transaction_management.TransactionManagement : transaction_repository
app.outers.utilities.datastore_utility.DataStoreUtility --* app.outers.repositories.account_repository.AccountRepository : datastore_utility
app.outers.utilities.datastore_utility.DataStoreUtility --* app.outers.repositories.company_repository.CompanyRepository : datastore_utility
app.outers.utilities.datastore_utility.DataStoreUtility --* app.outers.repositories.file_repository.FileRepository : datastore_utility
app.outers.utilities.datastore_utility.DataStoreUtility --* app.outers.repositories.inventory_control_repository.InventoryControlRepository : datastore_utility
app.outers.utilities.datastore_utility.DataStoreUtility --* app.outers.repositories.item_bundle_map_repository.ItemBundleMapRepository : datastore_utility
app.outers.utilities.datastore_utility.DataStoreUtility --* app.outers.repositories.item_file_map_repository.ItemFileMapRepository : datastore_utility
app.outers.utilities.datastore_utility.DataStoreUtility --* app.outers.repositories.item_repository.ItemRepository : datastore_utility
app.outers.utilities.datastore_utility.DataStoreUtility --* app.outers.repositories.location_repository.LocationRepository : datastore_utility
app.outers.utilities.datastore_utility.DataStoreUtility --* app.outers.repositories.role_repository.RoleRepository : datastore_utility
app.outers.utilities.datastore_utility.DataStoreUtility --* app.outers.repositories.transaction_item_map_repository.TransactionItemMapRepository : datastore_utility
app.outers.utilities.datastore_utility.DataStoreUtility --* app.outers.repositories.transaction_repository.TransactionRepository : datastore_utility
app.outers.utilities.management_utility.ManagementUtility --* app.inners.use_cases.managements.account_management.AccountManagement : management_utility
app.outers.utilities.management_utility.ManagementUtility --* app.inners.use_cases.managements.company_management.CompanyManagement : management_utility
app.outers.utilities.management_utility.ManagementUtility --* app.inners.use_cases.managements.file_management.FileManagement : management_utility
app.outers.utilities.management_utility.ManagementUtility --* app.inners.use_cases.managements.inventory_control_management.InventoryControlManagement : management_utility
app.outers.utilities.management_utility.ManagementUtility --* app.inners.use_cases.managements.item_bundle_map_management.ItemBundleMapManagement : management_utility
app.outers.utilities.management_utility.ManagementUtility --* app.inners.use_cases.managements.item_file_map_management.ItemFileMapManagement : management_utility
app.outers.utilities.management_utility.ManagementUtility --* app.inners.use_cases.managements.item_management.ItemManagement : management_utility
app.outers.utilities.management_utility.ManagementUtility --* app.inners.use_cases.managements.location_management.LocationManagement : management_utility
app.outers.utilities.management_utility.ManagementUtility --* app.inners.use_cases.managements.role_management.RoleManagement : management_utility
app.outers.utilities.management_utility.ManagementUtility --* app.inners.use_cases.managements.transaction_item_map_management.TransactionItemMapManagement : management_utility
app.outers.utilities.management_utility.ManagementUtility --* app.inners.use_cases.managements.transaction_management.TransactionManagement : management_utility
@enduml
